#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("read_r_Addr_A", 32, hls_out, 0, "bram", "mem_address", 1),
	Port_Property("read_r_EN_A", 1, hls_out, 0, "bram", "mem_ce", 1),
	Port_Property("read_r_WEN_A", 1, hls_out, 0, "bram", "mem_we", 1),
	Port_Property("read_r_Din_A", 8, hls_out, 0, "bram", "mem_din", 1),
	Port_Property("read_r_Dout_A", 8, hls_in, 0, "bram", "mem_dout", 1),
	Port_Property("read_r_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("read_r_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("read_r_Addr_B", 32, hls_out, 0, "bram", "mem_address", 1),
	Port_Property("read_r_EN_B", 1, hls_out, 0, "bram", "mem_ce", 1),
	Port_Property("read_r_WEN_B", 1, hls_out, 0, "bram", "mem_we", 1),
	Port_Property("read_r_Din_B", 8, hls_out, 0, "bram", "mem_din", 1),
	Port_Property("read_r_Dout_B", 8, hls_in, 0, "bram", "mem_dout", 1),
	Port_Property("read_r_Clk_B", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("read_r_Rst_B", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("ref_genome_TDATA", 8, hls_in, 1, "axis", "in_data", 1),
	Port_Property("ref_genome_TVALID", 1, hls_in, 1, "axis", "in_vld", 1),
	Port_Property("ref_genome_TREADY", 1, hls_out, 1, "axis", "in_acc", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "needlemanWunsch";
