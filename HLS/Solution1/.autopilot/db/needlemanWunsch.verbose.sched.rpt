

================================================================
== Vivado HLS Report for 'needlemanWunsch'
================================================================
* Date:           Sun Nov 15 12:28:44 2015

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        643_PE
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      7.51|        0.63|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  209|  210|  210|  211|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- COL     |  204|  204|         7|          2|          1|   100|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 1
  Pipeline-0: II = 2, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	9  / (exitcond)
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	2  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (tmp_2)
	13  / (!tmp_2)
12 --> 
	13  / true
13 --> 
* FSM state operations: 

 <State 1>: 2.52ns
ST_1: stg_14 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([100 x i8]* %reads) nounwind, !map !19

ST_1: stg_15 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8 %ref_genome) nounwind, !map !25

ST_1: stg_16 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([101 x i32]* %orig_in) nounwind, !map !31

ST_1: stg_17 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([101 x i32]* %orig_out) nounwind, !map !37

ST_1: stg_18 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([101 x i8]* %score_in) nounwind, !map !41

ST_1: stg_19 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([101 x i8]* %score_out) nounwind, !map !45

ST_1: stg_20 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %i) nounwind, !map !49

ST_1: stg_21 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !53

ST_1: stg_22 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @needlemanWunsch_str) nounwind

ST_1: i_read [1/1] 0.00ns
:9  %i_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %i) nounwind

ST_1: ref_genome_read [1/1] 0.00ns
:10  %ref_genome_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %ref_genome) nounwind

ST_1: tmp [1/1] 2.52ns
:11  %tmp = icmp eq i32 %i_read, 1

ST_1: stg_26 [1/1] 0.00ns
:12  br i1 %tmp, label %1, label %._crit_edge

ST_1: stg_27 [1/1] 1.57ns
:0  store i32 0, i32* @max_orig, align 4

ST_1: stg_28 [1/1] 1.57ns
:1  store i32 -100, i32* @max_score, align 4

ST_1: stg_29 [1/1] 0.00ns
:2  br label %._crit_edge

ST_1: stg_30 [1/1] 1.57ns
._crit_edge:0  br label %2


 <State 2>: 4.11ns
ST_2: j [1/1] 0.00ns
:0  %j = phi i7 [ 1, %._crit_edge ], [ %j_1, %9 ]

ST_2: exitcond [1/1] 1.97ns
:1  %exitcond = icmp eq i7 %j, -27

ST_2: stg_33 [1/1] 0.00ns
:2  br i1 %exitcond, label %10, label %3

ST_2: tmp_3 [1/1] 1.72ns
:4  %tmp_3 = add i7 %j, -1

ST_2: tmp_4 [1/1] 0.00ns
:5  %tmp_4 = zext i7 %tmp_3 to i64

ST_2: reads_addr [1/1] 0.00ns
:16  %reads_addr = getelementptr [100 x i8]* %reads, i64 0, i64 %tmp_4

ST_2: reads_load [2/2] 2.39ns
:17  %reads_load = load i8* %reads_addr, align 1


 <State 3>: 2.39ns
ST_3: reads_load [1/2] 2.39ns
:17  %reads_load = load i8* %reads_addr, align 1

ST_3: j_1 [1/1] 1.72ns
:1  %j_1 = add i7 %j, 1


 <State 4>: 2.39ns
ST_4: score_in_addr [1/1] 0.00ns
:6  %score_in_addr = getelementptr [101 x i8]* %score_in, i64 0, i64 %tmp_4

ST_4: score_in_load [2/2] 2.39ns
:7  %score_in_load = load i8* %score_in_addr, align 1

ST_4: tmp_5 [1/1] 0.00ns
:9  %tmp_5 = zext i7 %j to i64

ST_4: score_in_addr_1 [1/1] 0.00ns
:10  %score_in_addr_1 = getelementptr [101 x i8]* %score_in, i64 0, i64 %tmp_5

ST_4: score_in_load_1 [2/2] 2.39ns
:11  %score_in_load_1 = load i8* %score_in_addr_1, align 1

ST_4: tmp_6 [1/1] 2.00ns
:18  %tmp_6 = icmp eq i8 %reads_load, %ref_genome_read


 <State 5>: 4.23ns
ST_5: score_in_load [1/2] 2.39ns
:7  %score_in_load = load i8* %score_in_addr, align 1

ST_5: diag_cast [1/1] 0.00ns
:8  %diag_cast = sext i8 %score_in_load to i9

ST_5: score_in_load_1 [1/2] 2.39ns
:11  %score_in_load_1 = load i8* %score_in_addr_1, align 1

ST_5: up_cast [1/1] 0.00ns
:12  %up_cast = sext i8 %score_in_load_1 to i9

ST_5: score_out_addr_1 [1/1] 0.00ns
:13  %score_out_addr_1 = getelementptr [101 x i8]* %score_out, i64 0, i64 %tmp_4

ST_5: score_out_load_1 [2/2] 2.39ns
:14  %score_out_load_1 = load i8* %score_out_addr_1, align 1

ST_5: diag_score_0_v_cast_cast [1/1] 1.37ns
:19  %diag_score_0_v_cast_cast = select i1 %tmp_6, i9 1, i9 -1

ST_5: diag_score [1/1] 1.84ns
:20  %diag_score = add i9 %diag_cast, %diag_score_0_v_cast_cast

ST_5: up_score [1/1] 1.72ns
:22  %up_score = add i9 %up_cast, -1


 <State 6>: 7.51ns
ST_6: score_out_load_1 [1/2] 2.39ns
:14  %score_out_load_1 = load i8* %score_out_addr_1, align 1

ST_6: left_cast [1/1] 0.00ns
:15  %left_cast = sext i8 %score_out_load_1 to i9

ST_6: left_score [1/1] 1.72ns
:21  %left_score = add i9 %left_cast, -1

ST_6: tmp_7 [1/1] 2.03ns
:23  %tmp_7 = icmp slt i9 %diag_score, %left_score

ST_6: tmp_8 [1/1] 2.03ns
:24  %tmp_8 = icmp slt i9 %diag_score, %up_score

ST_6: or_cond [1/1] 1.37ns
:25  %or_cond = or i1 %tmp_7, %tmp_8

ST_6: stg_61 [1/1] 0.00ns
:26  br i1 %or_cond, label %5, label %4

ST_6: tmp_11 [1/1] 0.00ns
:0  %tmp_11 = trunc i9 %diag_score to i8

ST_6: score_out_addr_2 [1/1] 0.00ns
:1  %score_out_addr_2 = getelementptr [101 x i8]* %score_out, i64 0, i64 %tmp_5

ST_6: stg_64 [1/1] 2.39ns
:2  store i8 %tmp_11, i8* %score_out_addr_2, align 1

ST_6: orig_in_addr [1/1] 0.00ns
:3  %orig_in_addr = getelementptr [101 x i32]* %orig_in, i64 0, i64 %tmp_4

ST_6: orig_in_load [2/2] 2.71ns
:4  %orig_in_load = load i32* %orig_in_addr, align 4

ST_6: tmp_9 [1/1] 2.03ns
:0  %tmp_9 = icmp slt i9 %left_score, %diag_score

ST_6: tmp_s [1/1] 2.03ns
:1  %tmp_s = icmp slt i9 %left_score, %up_score

ST_6: or_cond1 [1/1] 1.37ns
:2  %or_cond1 = or i1 %tmp_9, %tmp_s

ST_6: stg_70 [1/1] 0.00ns
:3  br i1 %or_cond1, label %7, label %6

ST_6: tmp_13 [1/1] 0.00ns
:0  %tmp_13 = trunc i9 %left_score to i8

ST_6: score_out_addr_4 [1/1] 0.00ns
:1  %score_out_addr_4 = getelementptr [101 x i8]* %score_out, i64 0, i64 %tmp_5

ST_6: stg_73 [1/1] 2.39ns
:2  store i8 %tmp_13, i8* %score_out_addr_4, align 1

ST_6: tmp_12 [1/1] 0.00ns
:0  %tmp_12 = trunc i9 %up_score to i8

ST_6: score_out_addr_3 [1/1] 0.00ns
:1  %score_out_addr_3 = getelementptr [101 x i8]* %score_out, i64 0, i64 %tmp_5

ST_6: stg_76 [1/1] 2.39ns
:2  store i8 %tmp_12, i8* %score_out_addr_3, align 1

ST_6: orig_in_addr_1 [1/1] 0.00ns
:3  %orig_in_addr_1 = getelementptr [101 x i32]* %orig_in, i64 0, i64 %tmp_5

ST_6: orig_in_load_1 [2/2] 2.71ns
:4  %orig_in_load_1 = load i32* %orig_in_addr_1, align 4


 <State 7>: 2.71ns
ST_7: orig_in_load [1/2] 2.71ns
:4  %orig_in_load = load i32* %orig_in_addr, align 4

ST_7: orig_out_addr_3 [1/1] 0.00ns
:3  %orig_out_addr_3 = getelementptr [101 x i32]* %orig_out, i64 0, i64 %tmp_4

ST_7: orig_out_load_1 [2/2] 2.71ns
:4  %orig_out_load_1 = load i32* %orig_out_addr_3, align 4

ST_7: orig_in_load_1 [1/2] 2.71ns
:4  %orig_in_load_1 = load i32* %orig_in_addr_1, align 4


 <State 8>: 5.42ns
ST_8: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_8: stg_84 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str) nounwind

ST_8: tmp_10 [1/1] 0.00ns
:2  %tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str) nounwind

ST_8: stg_86 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: orig_out_addr_1 [1/1] 0.00ns
:5  %orig_out_addr_1 = getelementptr [101 x i32]* %orig_out, i64 0, i64 %tmp_5

ST_8: stg_88 [1/1] 2.71ns
:6  store i32 %orig_in_load, i32* %orig_out_addr_1, align 4

ST_8: stg_89 [1/1] 0.00ns
:7  br label %9

ST_8: orig_out_load_1 [1/2] 2.71ns
:4  %orig_out_load_1 = load i32* %orig_out_addr_3, align 4

ST_8: orig_out_addr_4 [1/1] 0.00ns
:5  %orig_out_addr_4 = getelementptr [101 x i32]* %orig_out, i64 0, i64 %tmp_5

ST_8: stg_92 [1/1] 2.71ns
:6  store i32 %orig_out_load_1, i32* %orig_out_addr_4, align 4

ST_8: stg_93 [1/1] 0.00ns
:7  br label %8

ST_8: orig_out_addr_2 [1/1] 0.00ns
:5  %orig_out_addr_2 = getelementptr [101 x i32]* %orig_out, i64 0, i64 %tmp_5

ST_8: stg_95 [1/1] 2.71ns
:6  store i32 %orig_in_load_1, i32* %orig_out_addr_2, align 4

ST_8: stg_96 [1/1] 0.00ns
:7  br label %8

ST_8: stg_97 [1/1] 0.00ns
:0  br label %9

ST_8: empty_2 [1/1] 0.00ns
:0  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str, i32 %tmp_10) nounwind

ST_8: stg_99 [1/1] 0.00ns
:2  br label %2


 <State 9>: 2.39ns
ST_9: score_out_addr [1/1] 0.00ns
:0  %score_out_addr = getelementptr [101 x i8]* %score_out, i64 0, i64 100

ST_9: score_out_load [2/2] 2.39ns
:1  %score_out_load = load i8* %score_out_addr, align 1


 <State 10>: 2.39ns
ST_10: score_out_load [1/2] 2.39ns
:1  %score_out_load = load i8* %score_out_addr, align 1


 <State 11>: 2.71ns
ST_11: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = sext i8 %score_out_load to i32

ST_11: max_score_load [1/1] 0.00ns
:3  %max_score_load = load i32* @max_score, align 4

ST_11: tmp_2 [1/1] 2.52ns
:4  %tmp_2 = icmp sgt i32 %tmp_1, %max_score_load

ST_11: stg_106 [1/1] 0.00ns
:5  br i1 %tmp_2, label %11, label %._crit_edge2

ST_11: stg_107 [1/1] 1.57ns
:0  store i32 %tmp_1, i32* @max_score, align 4

ST_11: orig_out_addr [1/1] 0.00ns
:1  %orig_out_addr = getelementptr [101 x i32]* %orig_out, i64 0, i64 100

ST_11: orig_out_load [2/2] 2.71ns
:2  %orig_out_load = load i32* %orig_out_addr, align 4


 <State 12>: 4.28ns
ST_12: orig_out_load [1/2] 2.71ns
:2  %orig_out_load = load i32* %orig_out_addr, align 4

ST_12: stg_111 [1/1] 1.57ns
:3  store i32 %orig_out_load, i32* @max_orig, align 4

ST_12: stg_112 [1/1] 0.00ns
:4  br label %._crit_edge2


 <State 13>: 0.00ns
ST_13: max_orig_load [1/1] 0.00ns
._crit_edge2:0  %max_orig_load = load i32* @max_orig, align 4

ST_13: stg_114 [1/1] 0.00ns
._crit_edge2:1  ret i32 %max_orig_load



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
