// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="needlemanWunsch,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.828000,HLS_SYN_LAT=110000001,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=688,HLS_SYN_LUT=1296}" *)

module needlemanWunsch (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        read_r_Addr_A,
        read_r_EN_A,
        read_r_WEN_A,
        read_r_Din_A,
        read_r_Dout_A,
        read_r_Clk_A,
        read_r_Rst_A,
        ref_genome_TDATA,
        ref_genome_TVALID,
        ref_genome_TREADY,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 9'b10000;
parameter    ap_ST_st13_fsm_5 = 9'b100000;
parameter    ap_ST_st14_fsm_6 = 9'b1000000;
parameter    ap_ST_pp1_stg0_fsm_7 = 9'b10000000;
parameter    ap_ST_st23_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv20_1 = 20'b1;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv32_FFFFFF9C = 32'b11111111111111111111111110011100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv20_F4241 = 20'b11110100001001000001;
parameter    ap_const_lv20_FFFFF = 20'b11111111111111111111;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv7_65 = 7'b1100101;
parameter    ap_const_lv7_7F = 7'b1111111;
parameter    ap_const_lv8_FE = 8'b11111110;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv20_2 = 20'b10;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [31:0] read_r_Addr_A;
output   read_r_EN_A;
output  [0:0] read_r_WEN_A;
output  [7:0] read_r_Din_A;
input  [7:0] read_r_Dout_A;
output   read_r_Clk_A;
output   read_r_Rst_A;
input  [7:0] ref_genome_TDATA;
input   ref_genome_TVALID;
output   ref_genome_TREADY;
output   interrupt;

reg read_r_EN_A;
reg read_r_Rst_A;
reg ref_genome_TREADY;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_50;
reg    ap_ready;
wire   [19:0] ap_return;
wire    needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce;
reg   [6:0] j_0_i2_reg_284;
reg   [7:0] score_out1_reg_295;
reg   [19:0] prev_orig_out_12_reg_307;
reg   [6:0] j_0_i_reg_317;
reg   [7:0] score_out2_reg_328;
reg   [19:0] prev_orig_out_14_reg_340;
wire  signed [19:0] prev_orig_out_fu_377_p2;
reg  signed [19:0] prev_orig_out_reg_1249;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_103;
wire   [0:0] tmp_fu_371_p2;
wire   [1:0] tmp_22_fu_383_p1;
reg   [1:0] tmp_22_reg_1255;
wire   [3:0] tmp_48_fu_432_p3;
reg   [3:0] tmp_48_reg_1260;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_119;
wire   [7:0] tmp_49_fu_440_p3;
reg   [7:0] tmp_49_reg_1265;
wire   [3:0] tmp_50_fu_448_p3;
reg   [3:0] tmp_50_reg_1270;
wire   [1:0] tmp_57_fu_485_p1;
reg   [1:0] tmp_57_reg_1275;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_135;
wire   [0:0] tmp_5_fu_489_p2;
reg   [0:0] tmp_5_reg_1280;
wire   [0:0] sel_tmp1_fu_495_p2;
reg   [0:0] sel_tmp1_reg_1288;
wire   [0:0] exitcond_i5_fu_501_p2;
reg   [0:0] exitcond_i5_reg_1293;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_148;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6;
wire   [7:0] j_0_i2_cast_fu_507_p1;
reg   [7:0] j_0_i2_cast_reg_1297;
reg   [7:0] ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it1;
reg   [7:0] ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it2;
wire   [0:0] tmp_6_fu_511_p2;
reg   [0:0] tmp_6_reg_1304;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_1304_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_1304_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_1304_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_1304_pp0_it4;
wire  signed [6:0] tmp_14_fu_517_p2;
reg  signed [6:0] tmp_14_reg_1311;
reg  signed [6:0] ap_reg_ppstg_tmp_14_reg_1311_pp0_it1;
wire   [1:0] tmp_76_fu_538_p1;
reg   [1:0] tmp_76_reg_1321;
wire   [6:0] j_fu_542_p2;
wire  signed [7:0] tmp_11_fu_548_p2;
reg  signed [7:0] tmp_11_reg_1331;
wire   [3:0] tmp_84_fu_598_p3;
reg   [3:0] tmp_84_reg_1336;
wire   [7:0] tmp_85_fu_606_p3;
reg   [7:0] tmp_85_reg_1341;
wire   [3:0] tmp_86_fu_614_p3;
reg   [3:0] tmp_86_reg_1346;
wire   [63:0] tmp_18_fu_631_p1;
reg   [63:0] tmp_18_reg_1356;
reg   [63:0] ap_reg_ppstg_tmp_18_reg_1356_pp0_it3;
reg   [63:0] ap_reg_ppstg_tmp_18_reg_1356_pp0_it4;
reg   [63:0] ap_reg_ppstg_tmp_18_reg_1356_pp0_it5;
reg   [63:0] ap_reg_ppstg_tmp_18_reg_1356_pp0_it6;
wire   [1:0] tmp_93_fu_664_p1;
reg   [1:0] tmp_93_reg_1373;
wire   [7:0] sel_tmp_fu_673_p3;
reg   [7:0] sel_tmp_reg_1378;
wire   [0:0] sel_tmp2_fu_680_p2;
reg   [0:0] sel_tmp2_reg_1383;
wire   [7:0] up_fu_689_p3;
reg   [7:0] up_reg_1388;
wire   [19:0] prev_orig_out_13_fu_700_p3;
reg   [19:0] prev_orig_out_13_reg_1393;
reg   [19:0] ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it4;
reg   [19:0] ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it5;
wire   [0:0] tmp_29_fu_707_p2;
reg   [0:0] tmp_29_reg_1398;
wire   [7:0] prev_score_out_8_fu_724_p2;
reg   [7:0] prev_score_out_8_reg_1408;
reg   [7:0] ap_reg_ppstg_prev_score_out_8_reg_1408_pp0_it5;
wire  signed [7:0] up_score_fu_730_p2;
reg  signed [7:0] up_score_reg_1416;
wire   [19:0] up_orig_fu_735_p3;
reg   [19:0] up_orig_reg_1423;
wire   [0:0] or_cond_i1_fu_764_p2;
reg   [0:0] or_cond_i1_reg_1428;
wire   [0:0] or_cond1_i1_fu_780_p2;
reg   [0:0] or_cond1_i1_reg_1434;
wire   [7:0] prev_score_out_1_fu_786_p3;
reg   [7:0] prev_score_out_1_reg_1439;
wire   [7:0] prev_score_out_3_fu_799_p3;
wire   [19:0] prev_orig_out_7_fu_805_p3;
reg   [19:0] prev_orig_out_7_reg_1449;
wire   [3:0] tmp_66_fu_861_p3;
reg   [3:0] tmp_66_reg_1455;
reg    ap_sig_cseq_ST_st13_fsm_5;
reg    ap_sig_bdd_273;
wire   [7:0] tmp_67_fu_869_p3;
reg   [7:0] tmp_67_reg_1460;
wire   [3:0] tmp_68_fu_877_p3;
reg   [3:0] tmp_68_reg_1465;
wire   [19:0] max_orig_1_fu_895_p3;
reg   [19:0] max_orig_1_reg_1470;
reg    ap_sig_cseq_ST_st14_fsm_6;
reg    ap_sig_bdd_287;
wire   [31:0] max_score_1_fu_903_p3;
reg   [31:0] max_score_1_reg_1475;
wire   [1:0] tmp_75_fu_940_p1;
reg   [1:0] tmp_75_reg_1481;
wire   [0:0] exitcond_i_fu_944_p2;
reg   [0:0] exitcond_i_reg_1486;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_7;
reg    ap_sig_bdd_300;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg    ap_reg_ppiten_pp1_it6 = 1'b0;
reg    ap_reg_ppiten_pp1_it7 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it1;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it3;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it4;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6;
wire  signed [6:0] tmp_15_fu_954_p2;
reg  signed [6:0] tmp_15_reg_1490;
reg  signed [6:0] ap_reg_ppstg_tmp_15_reg_1490_pp1_it1;
reg  signed [6:0] ap_reg_ppstg_tmp_15_reg_1490_pp1_it2;
wire   [0:0] tmp_17_fu_960_p2;
reg   [0:0] tmp_17_reg_1495;
reg   [0:0] ap_reg_ppstg_tmp_17_reg_1495_pp1_it1;
reg   [0:0] ap_reg_ppstg_tmp_17_reg_1495_pp1_it2;
reg   [0:0] ap_reg_ppstg_tmp_17_reg_1495_pp1_it3;
reg   [0:0] ap_reg_ppstg_tmp_17_reg_1495_pp1_it4;
wire  signed [7:0] tmp_19_fu_966_p2;
reg  signed [7:0] tmp_19_reg_1502;
reg  signed [7:0] ap_reg_ppstg_tmp_19_reg_1502_pp1_it1;
wire   [1:0] tmp_94_fu_987_p1;
reg   [1:0] tmp_94_reg_1512;
wire   [6:0] j_1_fu_991_p2;
wire   [3:0] tmp_102_fu_1042_p3;
reg   [3:0] tmp_102_reg_1522;
wire   [7:0] tmp_103_fu_1050_p3;
reg   [7:0] tmp_103_reg_1527;
wire   [3:0] tmp_104_fu_1058_p3;
reg   [3:0] tmp_104_reg_1532;
wire   [1:0] tmp_111_fu_1104_p1;
reg   [1:0] tmp_111_reg_1547;
wire   [63:0] tmp_16_fu_1108_p1;
reg   [63:0] tmp_16_reg_1552;
reg   [63:0] ap_reg_ppstg_tmp_16_reg_1552_pp1_it4;
reg   [63:0] ap_reg_ppstg_tmp_16_reg_1552_pp1_it5;
reg   [63:0] ap_reg_ppstg_tmp_16_reg_1552_pp1_it6;
wire   [7:0] score2_q0;
reg   [7:0] score2_load_1_reg_1564;
wire   [19:0] prev_orig_out_15_fu_1112_p3;
reg   [19:0] prev_orig_out_15_reg_1569;
reg   [19:0] ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it4;
reg   [19:0] ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it5;
wire   [0:0] tmp_41_fu_1119_p2;
reg   [0:0] tmp_41_reg_1574;
wire  signed [7:0] up_score_1_fu_1129_p2;
reg  signed [7:0] up_score_1_reg_1584;
wire   [7:0] prev_score_out_fu_1142_p2;
reg   [7:0] prev_score_out_reg_1591;
reg   [7:0] ap_reg_ppstg_prev_score_out_reg_1591_pp1_it5;
wire   [19:0] orig2_q1;
reg   [19:0] up_orig_1_reg_1599;
wire   [0:0] or_cond_i_fu_1170_p2;
reg   [0:0] or_cond_i_reg_1604;
wire   [0:0] or_cond1_i_fu_1186_p2;
reg   [0:0] or_cond1_i_reg_1610;
wire   [7:0] prev_score_out_2_fu_1192_p3;
reg   [7:0] prev_score_out_2_reg_1615;
wire   [7:0] prev_score_out_7_fu_1205_p3;
wire   [19:0] prev_orig_out_11_fu_1211_p3;
reg   [19:0] prev_orig_out_11_reg_1625;
wire   [19:0] max_orig_2_fu_1226_p3;
reg    ap_sig_cseq_ST_st23_fsm_8;
reg    ap_sig_bdd_419;
wire   [31:0] max_score_2_fu_1233_p3;
wire   [19:0] i_fu_1240_p2;
reg   [6:0] score1_address0;
reg    score1_ce0;
reg    score1_we0;
wire   [7:0] score1_d0;
wire   [7:0] score1_q0;
wire   [6:0] score1_address1;
reg    score1_ce1;
wire   [7:0] score1_q1;
reg   [6:0] score2_address0;
reg    score2_ce0;
reg    score2_we0;
wire   [7:0] score2_d0;
wire   [6:0] score2_address1;
reg    score2_ce1;
wire   [7:0] score2_q1;
reg   [6:0] orig1_address0;
reg    orig1_ce0;
reg    orig1_we0;
wire   [19:0] orig1_d0;
wire   [19:0] orig1_q0;
wire   [6:0] orig1_address1;
reg    orig1_ce1;
wire   [19:0] orig1_q1;
reg   [6:0] orig2_address0;
reg    orig2_ce0;
reg    orig2_we0;
wire   [19:0] orig2_d0;
wire   [19:0] orig2_q0;
wire   [6:0] orig2_address1;
reg    orig2_ce1;
reg   [19:0] prev_orig_out_1_reg_248;
reg   [19:0] max_orig_reg_260;
reg   [31:0] max_score_reg_272;
reg   [7:0] score_out1_phi_fu_299_p4;
reg   [19:0] prev_orig_out_12_phi_fu_310_p4;
reg   [7:0] score_out2_phi_fu_332_p4;
reg   [19:0] prev_orig_out_14_phi_fu_343_p4;
wire   [63:0] tmp_24_fu_533_p1;
wire   [63:0] tmp_12_fu_625_p1;
wire   [63:0] tmp_36_fu_982_p1;
wire   [63:0] tmp_20_fu_1069_p1;
reg   [31:0] read_r_Addr_A_orig;
wire   [2:0] tmp_4_fu_387_p3;
wire   [2:0] tmp_9_fu_394_p2;
wire   [3:0] tmp_25_fu_406_p1;
wire   [3:0] tmp_28_fu_410_p1;
wire   [0:0] tmp_23_fu_400_p2;
wire   [3:0] tmp_40_fu_414_p2;
wire   [3:0] tmp_47_fu_426_p2;
reg   [7:0] grp_fu_351_p4;
wire   [3:0] tmp_46_fu_420_p2;
wire   [3:0] tmp_51_fu_456_p2;
wire   [7:0] tmp_52_fu_461_p1;
wire   [7:0] tmp_53_fu_464_p1;
wire   [7:0] tmp_54_fu_468_p2;
wire   [7:0] tmp_55_fu_473_p2;
wire   [7:0] tmp_56_fu_479_p2;
wire   [4:0] tmp_21_fu_523_p4;
wire   [2:0] tmp_26_fu_553_p3;
wire   [2:0] tmp_27_fu_560_p2;
wire   [3:0] tmp_78_fu_572_p1;
wire   [3:0] tmp_79_fu_576_p1;
wire   [0:0] tmp_77_fu_566_p2;
wire   [3:0] tmp_81_fu_580_p2;
wire   [3:0] tmp_83_fu_592_p2;
reg   [7:0] grp_fu_361_p4;
wire   [3:0] tmp_82_fu_586_p2;
wire  signed [31:0] tmp_11_cast_fu_622_p1;
wire   [3:0] tmp_87_fu_635_p2;
wire   [7:0] tmp_88_fu_640_p1;
wire   [7:0] tmp_89_fu_643_p1;
wire   [7:0] tmp_90_fu_647_p2;
wire   [7:0] tmp_91_fu_652_p2;
wire   [7:0] tmp_92_fu_658_p2;
wire   [7:0] tmp_s_fu_668_p2;
wire   [7:0] tmp_13_fu_684_p2;
wire   [0:0] brmerge_i1_fu_696_p2;
wire   [7:0] diag_score_0_v_i1_cast_cast_fu_717_p3;
wire   [7:0] diag_fu_711_p3;
wire  signed [7:0] prev_score_out_0_op_i1_fu_742_p2;
wire   [7:0] prev_score_out_9_fu_748_p3;
wire   [0:0] tmp_30_fu_755_p2;
wire   [0:0] tmp_32_fu_760_p2;
wire   [0:0] tmp_33_fu_770_p2;
wire   [0:0] tmp_34_fu_775_p2;
wire   [19:0] prev_orig_out_5_fu_793_p3;
wire   [1:0] tmp_58_fu_811_p1;
wire   [2:0] tmp_3_fu_815_p3;
wire   [2:0] tmp_8_fu_823_p2;
wire   [3:0] tmp_60_fu_835_p1;
wire   [3:0] tmp_61_fu_839_p1;
wire   [0:0] tmp_59_fu_829_p2;
wire   [3:0] tmp_63_fu_843_p2;
wire   [3:0] tmp_65_fu_855_p2;
wire   [3:0] tmp_64_fu_849_p2;
wire  signed [31:0] max_score_3_fu_885_p1;
wire   [0:0] tmp_7_fu_889_p2;
wire   [3:0] tmp_69_fu_911_p2;
wire   [7:0] tmp_70_fu_916_p1;
wire   [7:0] tmp_71_fu_919_p1;
wire   [7:0] tmp_72_fu_923_p2;
wire   [7:0] tmp_73_fu_928_p2;
wire   [7:0] tmp_74_fu_934_p2;
wire   [7:0] j_0_i_cast_fu_950_p1;
wire   [4:0] tmp_35_fu_972_p4;
wire   [2:0] tmp_38_fu_997_p3;
wire   [2:0] tmp_39_fu_1004_p2;
wire   [3:0] tmp_96_fu_1016_p1;
wire   [3:0] tmp_97_fu_1020_p1;
wire   [0:0] tmp_95_fu_1010_p2;
wire   [3:0] tmp_99_fu_1024_p2;
wire   [3:0] tmp_101_fu_1036_p2;
wire   [3:0] tmp_100_fu_1030_p2;
wire  signed [31:0] tmp_19_cast_fu_1066_p1;
wire   [3:0] tmp_105_fu_1075_p2;
wire   [7:0] tmp_106_fu_1080_p1;
wire   [7:0] tmp_107_fu_1083_p1;
wire   [7:0] tmp_108_fu_1087_p2;
wire   [7:0] tmp_109_fu_1092_p2;
wire   [7:0] tmp_110_fu_1098_p2;
wire   [7:0] diag_score_0_v_i_cast_cast_fu_1135_p3;
wire   [7:0] diag_1_fu_1123_p3;
wire  signed [7:0] prev_score_out_0_op_i_fu_1148_p2;
wire   [7:0] prev_score_out_10_fu_1154_p3;
wire   [0:0] tmp_42_fu_1161_p2;
wire   [0:0] tmp_43_fu_1166_p2;
wire   [0:0] tmp_44_fu_1176_p2;
wire   [0:0] tmp_45_fu_1181_p2;
wire   [19:0] prev_orig_out_6_fu_1199_p3;
wire  signed [31:0] max_score_4_fu_1217_p1;
wire   [0:0] tmp_10_fu_1221_p2;
reg   [8:0] ap_NS_fsm;


needlemanWunsch_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
needlemanWunsch_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ap_return( ap_return )
);

needlemanWunsch_score1 #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
score1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( score1_address0 ),
    .ce0( score1_ce0 ),
    .we0( score1_we0 ),
    .d0( score1_d0 ),
    .q0( score1_q0 ),
    .address1( score1_address1 ),
    .ce1( score1_ce1 ),
    .q1( score1_q1 )
);

needlemanWunsch_score1 #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
score2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( score2_address0 ),
    .ce0( score2_ce0 ),
    .we0( score2_we0 ),
    .d0( score2_d0 ),
    .q0( score2_q0 ),
    .address1( score2_address1 ),
    .ce1( score2_ce1 ),
    .q1( score2_q1 )
);

needlemanWunsch_orig1 #(
    .DataWidth( 20 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
orig1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( orig1_address0 ),
    .ce0( orig1_ce0 ),
    .we0( orig1_we0 ),
    .d0( orig1_d0 ),
    .q0( orig1_q0 ),
    .address1( orig1_address1 ),
    .ce1( orig1_ce1 ),
    .q1( orig1_q1 )
);

needlemanWunsch_orig1 #(
    .DataWidth( 20 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
orig2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( orig2_address0 ),
    .ce0( orig2_ce0 ),
    .we0( orig2_we0 ),
    .d0( orig2_d0 ),
    .q0( orig2_q0 ),
    .address1( orig2_address1 ),
    .ce1( orig2_ce1 ),
    .q1( orig2_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_i5_fu_501_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_i5_fu_501_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_i5_fu_501_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & ~(ap_const_lv1_0 == exitcond_i_fu_944_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_lv1_0 == exitcond_i_fu_944_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & ~(ap_const_lv1_0 == exitcond_i_fu_944_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
    end
end

/// ap_reg_ppiten_pp1_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
    end
end

/// ap_reg_ppiten_pp1_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_i5_fu_501_p2))) begin
        j_0_i2_reg_284 <= j_fu_542_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_0_i2_reg_284 <= ap_const_lv7_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond_i_fu_944_p2))) begin
        j_0_i_reg_317 <= j_1_fu_991_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6)) begin
        j_0_i_reg_317 <= ap_const_lv7_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_8)) begin
        max_orig_reg_260 <= max_orig_2_fu_1226_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        max_orig_reg_260 <= ap_const_lv20_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_8)) begin
        max_score_reg_272 <= max_score_2_fu_1233_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        max_score_reg_272 <= ap_const_lv32_FFFFFF9C;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6))) begin
        prev_orig_out_12_reg_307 <= prev_orig_out_7_reg_1449;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        prev_orig_out_12_reg_307 <= prev_orig_out_reg_1249;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6))) begin
        prev_orig_out_14_reg_340 <= prev_orig_out_11_reg_1625;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6)) begin
        prev_orig_out_14_reg_340 <= prev_orig_out_1_reg_248;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_8)) begin
        prev_orig_out_1_reg_248 <= i_fu_1240_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        prev_orig_out_1_reg_248 <= ap_const_lv20_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5))) begin
        score_out1_reg_295 <= prev_score_out_3_fu_799_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        score_out1_reg_295 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5))) begin
        score_out2_reg_328 <= prev_score_out_7_fu_1205_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6)) begin
        score_out2_reg_328 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it1 <= exitcond_i5_reg_1293;
        ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it1[6 : 0] <= j_0_i2_cast_reg_1297[6 : 0];
        ap_reg_ppstg_tmp_14_reg_1311_pp0_it1 <= tmp_14_reg_1311;
        ap_reg_ppstg_tmp_6_reg_1304_pp0_it1 <= tmp_6_reg_1304;
        exitcond_i5_reg_1293 <= exitcond_i5_fu_501_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it2 <= ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it1;
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it3 <= ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it2;
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it4 <= ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it3;
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5 <= ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it4;
        ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6 <= ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5;
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it2 <= ap_reg_ppstg_exitcond_i_reg_1486_pp1_it1;
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it3 <= ap_reg_ppstg_exitcond_i_reg_1486_pp1_it2;
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it4 <= ap_reg_ppstg_exitcond_i_reg_1486_pp1_it3;
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5 <= ap_reg_ppstg_exitcond_i_reg_1486_pp1_it4;
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6 <= ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5;
        ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it2[6 : 0] <= ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it1[6 : 0];
        ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it4 <= prev_orig_out_13_reg_1393;
        ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it5 <= ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it4;
        ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it4 <= prev_orig_out_15_reg_1569;
        ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it5 <= ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it4;
        ap_reg_ppstg_prev_score_out_8_reg_1408_pp0_it5 <= prev_score_out_8_reg_1408;
        ap_reg_ppstg_prev_score_out_reg_1591_pp1_it5 <= prev_score_out_reg_1591;
        ap_reg_ppstg_tmp_15_reg_1490_pp1_it2 <= ap_reg_ppstg_tmp_15_reg_1490_pp1_it1;
        ap_reg_ppstg_tmp_16_reg_1552_pp1_it4[6 : 0] <= tmp_16_reg_1552[6 : 0];
        ap_reg_ppstg_tmp_16_reg_1552_pp1_it5[6 : 0] <= ap_reg_ppstg_tmp_16_reg_1552_pp1_it4[6 : 0];
        ap_reg_ppstg_tmp_16_reg_1552_pp1_it6[6 : 0] <= ap_reg_ppstg_tmp_16_reg_1552_pp1_it5[6 : 0];
        ap_reg_ppstg_tmp_17_reg_1495_pp1_it2 <= ap_reg_ppstg_tmp_17_reg_1495_pp1_it1;
        ap_reg_ppstg_tmp_17_reg_1495_pp1_it3 <= ap_reg_ppstg_tmp_17_reg_1495_pp1_it2;
        ap_reg_ppstg_tmp_17_reg_1495_pp1_it4 <= ap_reg_ppstg_tmp_17_reg_1495_pp1_it3;
        ap_reg_ppstg_tmp_18_reg_1356_pp0_it3[6 : 0] <= tmp_18_reg_1356[6 : 0];
        ap_reg_ppstg_tmp_18_reg_1356_pp0_it4[6 : 0] <= ap_reg_ppstg_tmp_18_reg_1356_pp0_it3[6 : 0];
        ap_reg_ppstg_tmp_18_reg_1356_pp0_it5[6 : 0] <= ap_reg_ppstg_tmp_18_reg_1356_pp0_it4[6 : 0];
        ap_reg_ppstg_tmp_18_reg_1356_pp0_it6[6 : 0] <= ap_reg_ppstg_tmp_18_reg_1356_pp0_it5[6 : 0];
        ap_reg_ppstg_tmp_6_reg_1304_pp0_it2 <= ap_reg_ppstg_tmp_6_reg_1304_pp0_it1;
        ap_reg_ppstg_tmp_6_reg_1304_pp0_it3 <= ap_reg_ppstg_tmp_6_reg_1304_pp0_it2;
        ap_reg_ppstg_tmp_6_reg_1304_pp0_it4 <= ap_reg_ppstg_tmp_6_reg_1304_pp0_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7)) begin
        ap_reg_ppstg_exitcond_i_reg_1486_pp1_it1 <= exitcond_i_reg_1486;
        ap_reg_ppstg_tmp_15_reg_1490_pp1_it1 <= tmp_15_reg_1490;
        ap_reg_ppstg_tmp_17_reg_1495_pp1_it1 <= tmp_17_reg_1495;
        ap_reg_ppstg_tmp_19_reg_1502_pp1_it1 <= tmp_19_reg_1502;
        exitcond_i_reg_1486 <= exitcond_i_fu_944_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_i5_fu_501_p2))) begin
        j_0_i2_cast_reg_1297[6 : 0] <= j_0_i2_cast_fu_507_p1[6 : 0];
        tmp_14_reg_1311 <= tmp_14_fu_517_p2;
        tmp_6_reg_1304 <= tmp_6_fu_511_p2;
        tmp_76_reg_1321 <= tmp_76_fu_538_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_6)) begin
        max_orig_1_reg_1470 <= max_orig_1_fu_895_p3;
        max_score_1_reg_1475 <= max_score_1_fu_903_p3;
        tmp_75_reg_1481 <= tmp_75_fu_940_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it4)) begin
        or_cond1_i1_reg_1434 <= or_cond1_i1_fu_780_p2;
        or_cond_i1_reg_1428 <= or_cond_i1_fu_764_p2;
        prev_score_out_1_reg_1439 <= prev_score_out_1_fu_786_p3;
        up_orig_reg_1423 <= up_orig_fu_735_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it4)) begin
        or_cond1_i_reg_1610 <= or_cond1_i_fu_1186_p2;
        or_cond_i_reg_1604 <= or_cond_i_fu_1170_p2;
        prev_score_out_2_reg_1615 <= prev_score_out_2_fu_1192_p3;
        up_orig_1_reg_1599 <= orig2_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5))) begin
        prev_orig_out_11_reg_1625 <= prev_orig_out_11_fu_1211_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it2)) begin
        prev_orig_out_13_reg_1393 <= prev_orig_out_13_fu_700_p3;
        sel_tmp2_reg_1383 <= sel_tmp2_fu_680_p2;
        sel_tmp_reg_1378 <= sel_tmp_fu_673_p3;
        tmp_29_reg_1398 <= tmp_29_fu_707_p2;
        up_reg_1388 <= up_fu_689_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it2)) begin
        prev_orig_out_15_reg_1569 <= prev_orig_out_15_fu_1112_p3;
        tmp_16_reg_1552[6 : 0] <= tmp_16_fu_1108_p1[6 : 0];
        tmp_41_reg_1574 <= tmp_41_fu_1119_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5))) begin
        prev_orig_out_7_reg_1449 <= prev_orig_out_7_fu_805_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_371_p2 == ap_const_lv1_0))) begin
        prev_orig_out_reg_1249 <= prev_orig_out_fu_377_p2;
        tmp_22_reg_1255 <= tmp_22_fu_383_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it3)) begin
        prev_score_out_8_reg_1408 <= prev_score_out_8_fu_724_p2;
        up_score_reg_1416 <= up_score_fu_730_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it3)) begin
        prev_score_out_reg_1591 <= prev_score_out_fu_1142_p2;
        up_score_1_reg_1584 <= up_score_1_fu_1129_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it2) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_17_reg_1495_pp1_it2))) begin
        score2_load_1_reg_1564 <= score2_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sel_tmp1_reg_1288 <= sel_tmp1_fu_495_p2;
        tmp_57_reg_1275 <= tmp_57_fu_485_p1;
        tmp_5_reg_1280 <= tmp_5_fu_489_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_lv1_0 == exitcond_i_reg_1486))) begin
        tmp_102_reg_1522[3 : 1] <= tmp_102_fu_1042_p3[3 : 1];
        tmp_103_reg_1527 <= tmp_103_fu_1050_p3;
        tmp_104_reg_1532 <= tmp_104_fu_1058_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it1)) begin
        tmp_111_reg_1547 <= tmp_111_fu_1104_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_i5_reg_1293))) begin
        tmp_11_reg_1331 <= tmp_11_fu_548_p2;
        tmp_84_reg_1336[3 : 1] <= tmp_84_fu_598_p3[3 : 1];
        tmp_85_reg_1341 <= tmp_85_fu_606_p3;
        tmp_86_reg_1346 <= tmp_86_fu_614_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_lv1_0 == exitcond_i_fu_944_p2))) begin
        tmp_15_reg_1490 <= tmp_15_fu_954_p2;
        tmp_17_reg_1495 <= tmp_17_fu_960_p2;
        tmp_19_reg_1502 <= tmp_19_fu_966_p2;
        tmp_94_reg_1512 <= tmp_94_fu_987_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it1)) begin
        tmp_18_reg_1356[6 : 0] <= tmp_18_fu_631_p1[6 : 0];
        tmp_93_reg_1373 <= tmp_93_fu_664_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ref_genome_TVALID == ap_const_logic_0))) begin
        tmp_48_reg_1260[3 : 1] <= tmp_48_fu_432_p3[3 : 1];
        tmp_49_reg_1265 <= tmp_49_fu_440_p3;
        tmp_50_reg_1270 <= tmp_50_fu_448_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ref_genome_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_5))) begin
        tmp_66_reg_1455[3 : 1] <= tmp_66_fu_861_p3[3 : 1];
        tmp_67_reg_1460 <= tmp_67_fu_869_p3;
        tmp_68_reg_1465 <= tmp_68_fu_877_p3;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_371_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_371_p2 == ap_const_lv1_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_371_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_371_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_148)
begin
    if (ap_sig_bdd_148) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_7 assign process. ///
always @ (ap_sig_bdd_300)
begin
    if (ap_sig_bdd_300) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_5 assign process. ///
always @ (ap_sig_bdd_273)
begin
    if (ap_sig_bdd_273) begin
        ap_sig_cseq_ST_st13_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_6 assign process. ///
always @ (ap_sig_bdd_287)
begin
    if (ap_sig_bdd_287) begin
        ap_sig_cseq_ST_st14_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_50)
begin
    if (ap_sig_bdd_50) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_8 assign process. ///
always @ (ap_sig_bdd_419)
begin
    if (ap_sig_bdd_419) begin
        ap_sig_cseq_ST_st23_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_103)
begin
    if (ap_sig_bdd_103) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_119)
begin
    if (ap_sig_bdd_119) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// orig1_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it7 or ap_reg_ppstg_tmp_16_reg_1552_pp1_it6 or tmp_12_fu_625_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it7)) begin
        orig1_address0 = ap_reg_ppstg_tmp_16_reg_1552_pp1_it6;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        orig1_address0 = tmp_12_fu_625_p1;
    end else begin
        orig1_address0 = 'bx;
    end
end

/// orig1_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it7)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) | (ap_const_logic_1 == ap_reg_ppiten_pp1_it7))) begin
        orig1_ce0 = ap_const_logic_1;
    end else begin
        orig1_ce0 = ap_const_logic_0;
    end
end

/// orig1_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it4)) begin
        orig1_ce1 = ap_const_logic_1;
    end else begin
        orig1_ce1 = ap_const_logic_0;
    end
end

/// orig1_we0 assign process. ///
always @ (ap_reg_ppiten_pp1_it7 or ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6))) begin
        orig1_we0 = ap_const_logic_1;
    end else begin
        orig1_we0 = ap_const_logic_0;
    end
end

/// orig2_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_tmp_18_reg_1356_pp0_it6 or ap_reg_ppiten_pp1_it2 or tmp_20_fu_1069_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it7)) begin
        orig2_address0 = ap_reg_ppstg_tmp_18_reg_1356_pp0_it6;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        orig2_address0 = tmp_20_fu_1069_p1;
    end else begin
        orig2_address0 = 'bx;
    end
end

/// orig2_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp1_it2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) | (ap_const_logic_1 == ap_reg_ppiten_pp1_it2))) begin
        orig2_ce0 = ap_const_logic_1;
    end else begin
        orig2_ce0 = ap_const_logic_0;
    end
end

/// orig2_ce1 assign process. ///
always @ (ap_reg_ppiten_pp1_it4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it4)) begin
        orig2_ce1 = ap_const_logic_1;
    end else begin
        orig2_ce1 = ap_const_logic_0;
    end
end

/// orig2_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6))) begin
        orig2_we0 = ap_const_logic_1;
    end else begin
        orig2_we0 = ap_const_logic_0;
    end
end

/// prev_orig_out_12_phi_fu_310_p4 assign process. ///
always @ (prev_orig_out_12_reg_307 or ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6 or prev_orig_out_7_reg_1449)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it6))) begin
        prev_orig_out_12_phi_fu_310_p4 = prev_orig_out_7_reg_1449;
    end else begin
        prev_orig_out_12_phi_fu_310_p4 = prev_orig_out_12_reg_307;
    end
end

/// prev_orig_out_14_phi_fu_343_p4 assign process. ///
always @ (prev_orig_out_14_reg_340 or ap_reg_ppiten_pp1_it7 or ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6 or prev_orig_out_11_reg_1625)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it6))) begin
        prev_orig_out_14_phi_fu_343_p4 = prev_orig_out_11_reg_1625;
    end else begin
        prev_orig_out_14_phi_fu_343_p4 = prev_orig_out_14_reg_340;
    end
end

/// read_r_Addr_A_orig assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp1_stg0_fsm_7 or ap_reg_ppiten_pp1_it0 or tmp_24_fu_533_p1 or tmp_36_fu_982_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        read_r_Addr_A_orig = tmp_36_fu_982_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        read_r_Addr_A_orig = tmp_24_fu_533_p1;
    end else begin
        read_r_Addr_A_orig = 'bx;
    end
end

/// read_r_EN_A assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp1_stg0_fsm_7 or ap_reg_ppiten_pp1_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        read_r_EN_A = ap_const_logic_1;
    end else begin
        read_r_EN_A = ap_const_logic_0;
    end
end

/// ref_genome_TREADY assign process. ///
always @ (ref_genome_TVALID or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st13_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ref_genome_TVALID == ap_const_logic_0)) | (~(ref_genome_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_5)))) begin
        ref_genome_TREADY = ap_const_logic_1;
    end else begin
        ref_genome_TREADY = ap_const_logic_0;
    end
end

/// score1_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it6 or ap_reg_ppstg_tmp_16_reg_1552_pp1_it5 or tmp_12_fu_625_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) begin
        score1_address0 = ap_reg_ppstg_tmp_16_reg_1552_pp1_it5;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        score1_address0 = tmp_12_fu_625_p1;
    end else begin
        score1_address0 = 'bx;
    end
end

/// score1_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it6)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) | (ap_const_logic_1 == ap_reg_ppiten_pp1_it6))) begin
        score1_ce0 = ap_const_logic_1;
    end else begin
        score1_ce0 = ap_const_logic_0;
    end
end

/// score1_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        score1_ce1 = ap_const_logic_1;
    end else begin
        score1_ce1 = ap_const_logic_0;
    end
end

/// score1_we0 assign process. ///
always @ (ap_reg_ppiten_pp1_it6 or ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5))) begin
        score1_we0 = ap_const_logic_1;
    end else begin
        score1_we0 = ap_const_logic_0;
    end
end

/// score2_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_tmp_18_reg_1356_pp0_it5 or ap_reg_ppiten_pp1_it2 or tmp_20_fu_1069_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) begin
        score2_address0 = ap_reg_ppstg_tmp_18_reg_1356_pp0_it5;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        score2_address0 = tmp_20_fu_1069_p1;
    end else begin
        score2_address0 = 'bx;
    end
end

/// score2_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp1_it2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) | (ap_const_logic_1 == ap_reg_ppiten_pp1_it2))) begin
        score2_ce0 = ap_const_logic_1;
    end else begin
        score2_ce0 = ap_const_logic_0;
    end
end

/// score2_ce1 assign process. ///
always @ (ap_reg_ppiten_pp1_it3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it3)) begin
        score2_ce1 = ap_const_logic_1;
    end else begin
        score2_ce1 = ap_const_logic_0;
    end
end

/// score2_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5))) begin
        score2_we0 = ap_const_logic_1;
    end else begin
        score2_we0 = ap_const_logic_0;
    end
end

/// score_out1_phi_fu_299_p4 assign process. ///
always @ (score_out1_reg_295 or ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5 or prev_score_out_3_fu_799_p3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i5_reg_1293_pp0_it5))) begin
        score_out1_phi_fu_299_p4 = prev_score_out_3_fu_799_p3;
    end else begin
        score_out1_phi_fu_299_p4 = score_out1_reg_295;
    end
end

/// score_out2_phi_fu_332_p4 assign process. ///
always @ (score_out2_reg_328 or ap_reg_ppiten_pp1_it6 or ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5 or prev_score_out_7_fu_1205_p3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1486_pp1_it5))) begin
        score_out2_phi_fu_332_p4 = prev_score_out_7_fu_1205_p3;
    end else begin
        score_out2_phi_fu_332_p4 = score_out2_reg_328;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ref_genome_TVALID or tmp_fu_371_p2 or exitcond_i5_fu_501_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or exitcond_i_fu_944_p2 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp1_it7)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((tmp_fu_371_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ref_genome_TVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_i5_fu_501_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_i5_fu_501_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st13_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_5;
            end
        end
        ap_ST_st13_fsm_5 : 
        begin
            if (~(ref_genome_TVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st14_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_5;
            end
        end
        ap_ST_st14_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_7;
        end
        ap_ST_pp1_stg0_fsm_7 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_i_fu_944_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_7;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_i_fu_944_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_st23_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_8;
            end
        end
        ap_ST_st23_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = max_orig_reg_260;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_103 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_103 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_119 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_148 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_148 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_273 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_273 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_287 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_287 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_300 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_300 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_419 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_419 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_50 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_50 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign brmerge_i1_fu_696_p2 = (tmp_5_reg_1280 | ap_reg_ppstg_tmp_6_reg_1304_pp0_it2);
assign diag_1_fu_1123_p3 = ((ap_reg_ppstg_tmp_17_reg_1495_pp1_it3[0:0]===1'b1)? ap_const_lv8_0: score2_load_1_reg_1564);
assign diag_fu_711_p3 = ((sel_tmp2_reg_1383[0:0]===1'b1)? ap_const_lv8_0: sel_tmp_reg_1378);
assign diag_score_0_v_i1_cast_cast_fu_717_p3 = ((tmp_29_reg_1398[0:0]===1'b1)? ap_const_lv8_1: ap_const_lv8_FF);
assign diag_score_0_v_i_cast_cast_fu_1135_p3 = ((tmp_41_reg_1574[0:0]===1'b1)? ap_const_lv8_1: ap_const_lv8_FF);
assign exitcond_i5_fu_501_p2 = (j_0_i2_reg_284 == ap_const_lv7_65? 1'b1: 1'b0);
assign exitcond_i_fu_944_p2 = (j_0_i_reg_317 == ap_const_lv7_65? 1'b1: 1'b0);

integer ap_tvar_int_0;

always @ (ref_genome_TDATA) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > ap_const_lv32_7 - ap_const_lv32_0) begin
            grp_fu_351_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            grp_fu_351_p4[ap_tvar_int_0] = ref_genome_TDATA[ap_const_lv32_7 - ap_tvar_int_0];
        end
    end
end



integer ap_tvar_int_1;

always @ (read_r_Dout_A) begin
    for (ap_tvar_int_1 = 8 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > ap_const_lv32_7 - ap_const_lv32_0) begin
            grp_fu_361_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            grp_fu_361_p4[ap_tvar_int_1] = read_r_Dout_A[ap_const_lv32_7 - ap_tvar_int_1];
        end
    end
end


assign i_fu_1240_p2 = (prev_orig_out_1_reg_248 + ap_const_lv20_2);
assign j_0_i2_cast_fu_507_p1 = j_0_i2_reg_284;
assign j_0_i_cast_fu_950_p1 = j_0_i_reg_317;
assign j_1_fu_991_p2 = (ap_const_lv7_1 + j_0_i_reg_317);
assign j_fu_542_p2 = (ap_const_lv7_1 + j_0_i2_reg_284);
assign max_orig_1_fu_895_p3 = ((tmp_7_fu_889_p2[0:0]===1'b1)? prev_orig_out_12_reg_307: max_orig_reg_260);
assign max_orig_2_fu_1226_p3 = ((tmp_10_fu_1221_p2[0:0]===1'b1)? prev_orig_out_14_reg_340: max_orig_1_reg_1470);
assign max_score_1_fu_903_p3 = ((tmp_7_fu_889_p2[0:0]===1'b1)? max_score_3_fu_885_p1: max_score_reg_272);
assign max_score_2_fu_1233_p3 = ((tmp_10_fu_1221_p2[0:0]===1'b1)? max_score_4_fu_1217_p1: max_score_1_reg_1475);
assign max_score_3_fu_885_p1 = $signed(score_out1_reg_295);
assign max_score_4_fu_1217_p1 = $signed(score_out2_reg_328);
assign needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign or_cond1_i1_fu_780_p2 = (tmp_33_fu_770_p2 | tmp_34_fu_775_p2);
assign or_cond1_i_fu_1186_p2 = (tmp_44_fu_1176_p2 | tmp_45_fu_1181_p2);
assign or_cond_i1_fu_764_p2 = (tmp_30_fu_755_p2 | tmp_32_fu_760_p2);
assign or_cond_i_fu_1170_p2 = (tmp_42_fu_1161_p2 | tmp_43_fu_1166_p2);
assign orig1_address1 = ap_reg_ppstg_tmp_18_reg_1356_pp0_it3;
assign orig1_d0 = prev_orig_out_11_reg_1625;
assign orig2_address1 = tmp_16_reg_1552;
assign orig2_d0 = prev_orig_out_7_reg_1449;
assign prev_orig_out_11_fu_1211_p3 = ((or_cond_i_reg_1604[0:0]===1'b1)? prev_orig_out_6_fu_1199_p3: ap_reg_ppstg_prev_orig_out_15_reg_1569_pp1_it5);
assign prev_orig_out_13_fu_700_p3 = ((brmerge_i1_fu_696_p2[0:0]===1'b1)? prev_orig_out_reg_1249: orig1_q0);
assign prev_orig_out_15_fu_1112_p3 = ((ap_reg_ppstg_tmp_17_reg_1495_pp1_it2[0:0]===1'b1)? prev_orig_out_1_reg_248: orig2_q0);
assign prev_orig_out_5_fu_793_p3 = ((or_cond1_i1_reg_1434[0:0]===1'b1)? up_orig_reg_1423: prev_orig_out_12_phi_fu_310_p4);
assign prev_orig_out_6_fu_1199_p3 = ((or_cond1_i_reg_1610[0:0]===1'b1)? up_orig_1_reg_1599: prev_orig_out_14_phi_fu_343_p4);
assign prev_orig_out_7_fu_805_p3 = ((or_cond_i1_reg_1428[0:0]===1'b1)? prev_orig_out_5_fu_793_p3: ap_reg_ppstg_prev_orig_out_13_reg_1393_pp0_it5);
assign prev_orig_out_fu_377_p2 = ($signed(ap_const_lv20_FFFFF) + $signed(prev_orig_out_1_reg_248));
assign prev_score_out_0_op_i1_fu_742_p2 = ($signed(ap_const_lv8_FF) + $signed(score_out1_phi_fu_299_p4));
assign prev_score_out_0_op_i_fu_1148_p2 = ($signed(ap_const_lv8_FF) + $signed(score_out2_phi_fu_332_p4));
assign prev_score_out_10_fu_1154_p3 = ((ap_reg_ppstg_tmp_17_reg_1495_pp1_it4[0:0]===1'b1)? ap_const_lv8_FF: prev_score_out_0_op_i_fu_1148_p2);
assign prev_score_out_1_fu_786_p3 = ((or_cond1_i1_fu_780_p2[0:0]===1'b1)? up_score_reg_1416: prev_score_out_9_fu_748_p3);
assign prev_score_out_2_fu_1192_p3 = ((or_cond1_i_fu_1186_p2[0:0]===1'b1)? up_score_1_reg_1584: prev_score_out_10_fu_1154_p3);
assign prev_score_out_3_fu_799_p3 = ((or_cond_i1_reg_1428[0:0]===1'b1)? prev_score_out_1_reg_1439: ap_reg_ppstg_prev_score_out_8_reg_1408_pp0_it5);
assign prev_score_out_7_fu_1205_p3 = ((or_cond_i_reg_1604[0:0]===1'b1)? prev_score_out_2_reg_1615: ap_reg_ppstg_prev_score_out_reg_1591_pp1_it5);
assign prev_score_out_8_fu_724_p2 = (diag_score_0_v_i1_cast_cast_fu_717_p3 + diag_fu_711_p3);
assign prev_score_out_9_fu_748_p3 = ((ap_reg_ppstg_tmp_6_reg_1304_pp0_it4[0:0]===1'b1)? ap_const_lv8_FF: prev_score_out_0_op_i1_fu_742_p2);
assign prev_score_out_fu_1142_p2 = (diag_score_0_v_i_cast_cast_fu_1135_p3 + diag_1_fu_1123_p3);
assign read_r_Addr_A = read_r_Addr_A_orig << ap_const_lv32_0;
assign read_r_Clk_A = ap_clk;
assign read_r_Din_A = ap_const_lv8_0;

/// read_r_Rst_A assign process. ///
always @ (ap_rst_n)
begin
    read_r_Rst_A = ~ap_rst_n;
end
assign read_r_WEN_A = ap_const_lv1_0;
assign score1_address1 = tmp_18_fu_631_p1;
assign score1_d0 = ((or_cond_i_reg_1604[0:0]===1'b1)? prev_score_out_2_reg_1615: ap_reg_ppstg_prev_score_out_reg_1591_pp1_it5);
assign score2_address1 = tmp_16_fu_1108_p1;
assign score2_d0 = ((or_cond_i1_reg_1428[0:0]===1'b1)? prev_score_out_1_reg_1439: ap_reg_ppstg_prev_score_out_8_reg_1408_pp0_it5);
assign sel_tmp1_fu_495_p2 = (tmp_5_fu_489_p2 ^ ap_const_lv1_1);
assign sel_tmp2_fu_680_p2 = (ap_reg_ppstg_tmp_6_reg_1304_pp0_it2 & sel_tmp1_reg_1288);
assign sel_tmp_fu_673_p3 = ((tmp_5_reg_1280[0:0]===1'b1)? tmp_s_fu_668_p2: score1_q0);
assign tmp_100_fu_1030_p2 = (tmp_96_fu_1016_p1 ^ ap_const_lv4_7);
assign tmp_101_fu_1036_p2 = (tmp_97_fu_1020_p1 - tmp_96_fu_1016_p1);
assign tmp_102_fu_1042_p3 = ((tmp_95_fu_1010_p2[0:0]===1'b1)? tmp_99_fu_1024_p2: tmp_101_fu_1036_p2);
assign tmp_103_fu_1050_p3 = ((tmp_95_fu_1010_p2[0:0]===1'b1)? grp_fu_361_p4: read_r_Dout_A);
assign tmp_104_fu_1058_p3 = ((tmp_95_fu_1010_p2[0:0]===1'b1)? tmp_100_fu_1030_p2: tmp_96_fu_1016_p1);
assign tmp_105_fu_1075_p2 = (ap_const_lv4_7 - tmp_102_reg_1522);
assign tmp_106_fu_1080_p1 = tmp_104_reg_1532;
assign tmp_107_fu_1083_p1 = tmp_105_fu_1075_p2;
assign tmp_108_fu_1087_p2 = tmp_103_reg_1527 >> tmp_106_fu_1080_p1;
assign tmp_109_fu_1092_p2 = ap_const_lv8_FF >> tmp_107_fu_1083_p1;
assign tmp_10_fu_1221_p2 = ($signed(max_score_4_fu_1217_p1) > $signed(max_score_1_reg_1475)? 1'b1: 1'b0);
assign tmp_110_fu_1098_p2 = (tmp_108_fu_1087_p2 & tmp_109_fu_1092_p2);
assign tmp_111_fu_1104_p1 = tmp_110_fu_1098_p2[1:0];
assign tmp_11_cast_fu_622_p1 = tmp_11_reg_1331;
assign tmp_11_fu_548_p2 = ($signed(ap_const_lv8_FE) + $signed(j_0_i2_cast_reg_1297));
assign tmp_12_fu_625_p1 = $unsigned(tmp_11_cast_fu_622_p1);
assign tmp_13_fu_684_p2 = (ap_const_lv8_0 - ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it2);
assign tmp_14_fu_517_p2 = ($signed(ap_const_lv7_7F) + $signed(j_0_i2_reg_284));
assign tmp_15_fu_954_p2 = ($signed(ap_const_lv7_7F) + $signed(j_0_i_reg_317));
assign tmp_16_fu_1108_p1 = $unsigned(ap_reg_ppstg_tmp_15_reg_1490_pp1_it2);
assign tmp_17_fu_960_p2 = (j_0_i_reg_317 == ap_const_lv7_1? 1'b1: 1'b0);
assign tmp_18_fu_631_p1 = $unsigned(ap_reg_ppstg_tmp_14_reg_1311_pp0_it1);
assign tmp_19_cast_fu_1066_p1 = ap_reg_ppstg_tmp_19_reg_1502_pp1_it1;
assign tmp_19_fu_966_p2 = ($signed(ap_const_lv8_FE) + $signed(j_0_i_cast_fu_950_p1));
assign tmp_20_fu_1069_p1 = $unsigned(tmp_19_cast_fu_1066_p1);
assign tmp_21_fu_523_p4 = {{tmp_14_fu_517_p2[ap_const_lv32_6 : ap_const_lv32_2]}};
assign tmp_22_fu_383_p1 = prev_orig_out_fu_377_p2[1:0];
assign tmp_23_fu_400_p2 = (tmp_4_fu_387_p3 > tmp_9_fu_394_p2? 1'b1: 1'b0);
assign tmp_24_fu_533_p1 = tmp_21_fu_523_p4;
assign tmp_25_fu_406_p1 = tmp_4_fu_387_p3;
assign tmp_26_fu_553_p3 = {{tmp_76_reg_1321}, {ap_const_lv1_0}};
assign tmp_27_fu_560_p2 = (tmp_26_fu_553_p3 | ap_const_lv3_1);
assign tmp_28_fu_410_p1 = tmp_9_fu_394_p2;
assign tmp_29_fu_707_p2 = (tmp_93_reg_1373 == tmp_57_reg_1275? 1'b1: 1'b0);
assign tmp_30_fu_755_p2 = ($signed(prev_score_out_8_reg_1408) < $signed(prev_score_out_9_fu_748_p3)? 1'b1: 1'b0);
assign tmp_32_fu_760_p2 = ($signed(prev_score_out_8_reg_1408) < $signed(up_score_reg_1416)? 1'b1: 1'b0);
assign tmp_33_fu_770_p2 = ($signed(prev_score_out_9_fu_748_p3) < $signed(prev_score_out_8_reg_1408)? 1'b1: 1'b0);
assign tmp_34_fu_775_p2 = ($signed(prev_score_out_9_fu_748_p3) < $signed(up_score_reg_1416)? 1'b1: 1'b0);
assign tmp_35_fu_972_p4 = {{tmp_15_fu_954_p2[ap_const_lv32_6 : ap_const_lv32_2]}};
assign tmp_36_fu_982_p1 = tmp_35_fu_972_p4;
assign tmp_38_fu_997_p3 = {{tmp_94_reg_1512}, {ap_const_lv1_0}};
assign tmp_39_fu_1004_p2 = (tmp_38_fu_997_p3 | ap_const_lv3_1);
assign tmp_3_fu_815_p3 = {{tmp_58_fu_811_p1}, {ap_const_lv1_0}};
assign tmp_40_fu_414_p2 = (tmp_25_fu_406_p1 - tmp_28_fu_410_p1);
assign tmp_41_fu_1119_p2 = (tmp_111_reg_1547 == tmp_75_reg_1481? 1'b1: 1'b0);
assign tmp_42_fu_1161_p2 = ($signed(prev_score_out_reg_1591) < $signed(prev_score_out_10_fu_1154_p3)? 1'b1: 1'b0);
assign tmp_43_fu_1166_p2 = ($signed(prev_score_out_reg_1591) < $signed(up_score_1_reg_1584)? 1'b1: 1'b0);
assign tmp_44_fu_1176_p2 = ($signed(prev_score_out_10_fu_1154_p3) < $signed(prev_score_out_reg_1591)? 1'b1: 1'b0);
assign tmp_45_fu_1181_p2 = ($signed(prev_score_out_10_fu_1154_p3) < $signed(up_score_1_reg_1584)? 1'b1: 1'b0);
assign tmp_46_fu_420_p2 = (tmp_25_fu_406_p1 ^ ap_const_lv4_7);
assign tmp_47_fu_426_p2 = (tmp_28_fu_410_p1 - tmp_25_fu_406_p1);
assign tmp_48_fu_432_p3 = ((tmp_23_fu_400_p2[0:0]===1'b1)? tmp_40_fu_414_p2: tmp_47_fu_426_p2);
assign tmp_49_fu_440_p3 = ((tmp_23_fu_400_p2[0:0]===1'b1)? grp_fu_351_p4: ref_genome_TDATA);
assign tmp_4_fu_387_p3 = {{tmp_22_reg_1255}, {ap_const_lv1_0}};
assign tmp_50_fu_448_p3 = ((tmp_23_fu_400_p2[0:0]===1'b1)? tmp_46_fu_420_p2: tmp_25_fu_406_p1);
assign tmp_51_fu_456_p2 = (ap_const_lv4_7 - tmp_48_reg_1260);
assign tmp_52_fu_461_p1 = tmp_50_reg_1270;
assign tmp_53_fu_464_p1 = tmp_51_fu_456_p2;
assign tmp_54_fu_468_p2 = tmp_49_reg_1265 >> tmp_52_fu_461_p1;
assign tmp_55_fu_473_p2 = ap_const_lv8_FF >> tmp_53_fu_464_p1;
assign tmp_56_fu_479_p2 = (tmp_54_fu_468_p2 & tmp_55_fu_473_p2);
assign tmp_57_fu_485_p1 = tmp_56_fu_479_p2[1:0];
assign tmp_58_fu_811_p1 = prev_orig_out_1_reg_248[1:0];
assign tmp_59_fu_829_p2 = (tmp_3_fu_815_p3 > tmp_8_fu_823_p2? 1'b1: 1'b0);
assign tmp_5_fu_489_p2 = (prev_orig_out_1_reg_248 == ap_const_lv20_1? 1'b1: 1'b0);
assign tmp_60_fu_835_p1 = tmp_3_fu_815_p3;
assign tmp_61_fu_839_p1 = tmp_8_fu_823_p2;
assign tmp_63_fu_843_p2 = (tmp_60_fu_835_p1 - tmp_61_fu_839_p1);
assign tmp_64_fu_849_p2 = (tmp_60_fu_835_p1 ^ ap_const_lv4_7);
assign tmp_65_fu_855_p2 = (tmp_61_fu_839_p1 - tmp_60_fu_835_p1);
assign tmp_66_fu_861_p3 = ((tmp_59_fu_829_p2[0:0]===1'b1)? tmp_63_fu_843_p2: tmp_65_fu_855_p2);
assign tmp_67_fu_869_p3 = ((tmp_59_fu_829_p2[0:0]===1'b1)? grp_fu_351_p4: ref_genome_TDATA);
assign tmp_68_fu_877_p3 = ((tmp_59_fu_829_p2[0:0]===1'b1)? tmp_64_fu_849_p2: tmp_60_fu_835_p1);
assign tmp_69_fu_911_p2 = (ap_const_lv4_7 - tmp_66_reg_1455);
assign tmp_6_fu_511_p2 = (j_0_i2_reg_284 == ap_const_lv7_1? 1'b1: 1'b0);
assign tmp_70_fu_916_p1 = tmp_68_reg_1465;
assign tmp_71_fu_919_p1 = tmp_69_fu_911_p2;
assign tmp_72_fu_923_p2 = tmp_67_reg_1460 >> tmp_70_fu_916_p1;
assign tmp_73_fu_928_p2 = ap_const_lv8_FF >> tmp_71_fu_919_p1;
assign tmp_74_fu_934_p2 = (tmp_72_fu_923_p2 & tmp_73_fu_928_p2);
assign tmp_75_fu_940_p1 = tmp_74_fu_934_p2[1:0];
assign tmp_76_fu_538_p1 = tmp_14_fu_517_p2[1:0];
assign tmp_77_fu_566_p2 = (tmp_26_fu_553_p3 > tmp_27_fu_560_p2? 1'b1: 1'b0);
assign tmp_78_fu_572_p1 = tmp_26_fu_553_p3;
assign tmp_79_fu_576_p1 = tmp_27_fu_560_p2;
assign tmp_7_fu_889_p2 = ($signed(max_score_3_fu_885_p1) > $signed(max_score_reg_272)? 1'b1: 1'b0);
assign tmp_81_fu_580_p2 = (tmp_78_fu_572_p1 - tmp_79_fu_576_p1);
assign tmp_82_fu_586_p2 = (tmp_78_fu_572_p1 ^ ap_const_lv4_7);
assign tmp_83_fu_592_p2 = (tmp_79_fu_576_p1 - tmp_78_fu_572_p1);
assign tmp_84_fu_598_p3 = ((tmp_77_fu_566_p2[0:0]===1'b1)? tmp_81_fu_580_p2: tmp_83_fu_592_p2);
assign tmp_85_fu_606_p3 = ((tmp_77_fu_566_p2[0:0]===1'b1)? grp_fu_361_p4: read_r_Dout_A);
assign tmp_86_fu_614_p3 = ((tmp_77_fu_566_p2[0:0]===1'b1)? tmp_82_fu_586_p2: tmp_78_fu_572_p1);
assign tmp_87_fu_635_p2 = (ap_const_lv4_7 - tmp_84_reg_1336);
assign tmp_88_fu_640_p1 = tmp_86_reg_1346;
assign tmp_89_fu_643_p1 = tmp_87_fu_635_p2;
assign tmp_8_fu_823_p2 = (tmp_3_fu_815_p3 | ap_const_lv3_1);
assign tmp_90_fu_647_p2 = tmp_85_reg_1341 >> tmp_88_fu_640_p1;
assign tmp_91_fu_652_p2 = ap_const_lv8_FF >> tmp_89_fu_643_p1;
assign tmp_92_fu_658_p2 = (tmp_90_fu_647_p2 & tmp_91_fu_652_p2);
assign tmp_93_fu_664_p1 = tmp_92_fu_658_p2[1:0];
assign tmp_94_fu_987_p1 = tmp_15_fu_954_p2[1:0];
assign tmp_95_fu_1010_p2 = (tmp_38_fu_997_p3 > tmp_39_fu_1004_p2? 1'b1: 1'b0);
assign tmp_96_fu_1016_p1 = tmp_38_fu_997_p3;
assign tmp_97_fu_1020_p1 = tmp_39_fu_1004_p2;
assign tmp_99_fu_1024_p2 = (tmp_96_fu_1016_p1 - tmp_97_fu_1020_p1);
assign tmp_9_fu_394_p2 = (tmp_4_fu_387_p3 | ap_const_lv3_1);
assign tmp_fu_371_p2 = (prev_orig_out_1_reg_248 < ap_const_lv20_F4241? 1'b1: 1'b0);
assign tmp_s_fu_668_p2 = (ap_const_lv8_1 - ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it2);
assign up_fu_689_p3 = ((tmp_5_reg_1280[0:0]===1'b1)? tmp_13_fu_684_p2: score1_q1);
assign up_orig_fu_735_p3 = ((tmp_5_reg_1280[0:0]===1'b1)? ap_const_lv20_0: orig1_q1);
assign up_score_1_fu_1129_p2 = ($signed(ap_const_lv8_FF) + $signed(score2_q1));
assign up_score_fu_730_p2 = ($signed(ap_const_lv8_FF) + $signed(up_reg_1388));
always @ (posedge ap_clk)
begin
    tmp_48_reg_1260[0] <= 1'b1;
    j_0_i2_cast_reg_1297[7] <= 1'b0;
    ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it1[7] <= 1'b0;
    ap_reg_ppstg_j_0_i2_cast_reg_1297_pp0_it2[7] <= 1'b0;
    tmp_84_reg_1336[0] <= 1'b1;
    tmp_18_reg_1356[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_18_reg_1356_pp0_it3[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_18_reg_1356_pp0_it4[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_18_reg_1356_pp0_it5[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_18_reg_1356_pp0_it6[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_66_reg_1455[0] <= 1'b1;
    tmp_102_reg_1522[0] <= 1'b1;
    tmp_16_reg_1552[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_16_reg_1552_pp1_it4[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_16_reg_1552_pp1_it5[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_16_reg_1552_pp1_it6[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end



endmodule //needlemanWunsch

