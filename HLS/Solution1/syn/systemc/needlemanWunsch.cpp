// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "needlemanWunsch.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic needlemanWunsch::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic needlemanWunsch::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> needlemanWunsch::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> needlemanWunsch::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<8> needlemanWunsch::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<8> needlemanWunsch::ap_ST_st9_fsm_3 = "1000";
const sc_lv<8> needlemanWunsch::ap_ST_st10_fsm_4 = "10000";
const sc_lv<8> needlemanWunsch::ap_ST_st11_fsm_5 = "100000";
const sc_lv<8> needlemanWunsch::ap_ST_st12_fsm_6 = "1000000";
const sc_lv<8> needlemanWunsch::ap_ST_st13_fsm_7 = "10000000";
const sc_lv<32> needlemanWunsch::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> needlemanWunsch::ap_const_lv1_1 = "1";
const sc_lv<32> needlemanWunsch::ap_const_lv32_2 = "10";
const sc_lv<1> needlemanWunsch::ap_const_lv1_0 = "0";
const sc_lv<32> needlemanWunsch::ap_const_lv32_1 = "1";
const sc_lv<32> needlemanWunsch::ap_const_lv32_3 = "11";
const sc_lv<32> needlemanWunsch::ap_const_lv32_4 = "100";
const sc_lv<32> needlemanWunsch::ap_const_lv32_5 = "101";
const sc_lv<7> needlemanWunsch::ap_const_lv7_1 = "1";
const sc_lv<64> needlemanWunsch::ap_const_lv64_64 = "1100100";
const sc_lv<32> needlemanWunsch::ap_const_lv32_6 = "110";
const sc_lv<32> needlemanWunsch::ap_const_lv32_7 = "111";
const sc_lv<32> needlemanWunsch::ap_const_lv32_FFFFFF9C = "11111111111111111111111110011100";
const sc_lv<7> needlemanWunsch::ap_const_lv7_65 = "1100101";
const sc_lv<7> needlemanWunsch::ap_const_lv7_7F = "1111111";
const sc_lv<9> needlemanWunsch::ap_const_lv9_1 = "1";
const sc_lv<9> needlemanWunsch::ap_const_lv9_1FF = "111111111";

needlemanWunsch::needlemanWunsch(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_7 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_7 );

    SC_METHOD(thread_ap_return);
    sensitive << ( max_orig );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_7 );

    SC_METHOD(thread_ap_sig_bdd_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_164);
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_ap_sig_bdd_176);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_184);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_193);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_213);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );

    SC_METHOD(thread_ap_sig_bdd_216);
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_ap_sig_bdd_238);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_247);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_81 );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_4);
    sensitive << ( ap_sig_bdd_184 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_5);
    sensitive << ( ap_sig_bdd_193 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_6);
    sensitive << ( ap_sig_bdd_238 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_7);
    sensitive << ( ap_sig_bdd_247 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_24 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_3);
    sensitive << ( ap_sig_bdd_176 );

    SC_METHOD(thread_diag_cast_fu_287_p1);
    sensitive << ( score_in_q0 );

    SC_METHOD(thread_diag_score_0_v_cast_cast_fu_295_p3);
    sensitive << ( tmp_6_reg_453 );

    SC_METHOD(thread_diag_score_fu_302_p2);
    sensitive << ( diag_cast_fu_287_p1 );
    sensitive << ( diag_score_0_v_cast_cast_fu_295_p3 );

    SC_METHOD(thread_exitcond_fu_255_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( j_phi_fu_224_p4 );

    SC_METHOD(thread_j_1_fu_272_p2);
    sensitive << ( j_reg_220 );

    SC_METHOD(thread_j_phi_fu_224_p4);
    sensitive << ( j_reg_220 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_405 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( j_1_reg_427 );

    SC_METHOD(thread_left_cast_fu_314_p1);
    sensitive << ( score_out_q0 );

    SC_METHOD(thread_left_score_fu_318_p2);
    sensitive << ( left_cast_fu_314_p1 );

    SC_METHOD(thread_or_cond1_fu_353_p2);
    sensitive << ( tmp_9_fu_343_p2 );
    sensitive << ( tmp_s_fu_348_p2 );

    SC_METHOD(thread_or_cond_fu_333_p2);
    sensitive << ( tmp_7_fu_324_p2 );
    sensitive << ( tmp_8_fu_329_p2 );

    SC_METHOD(thread_orig_in_address0);
    sensitive << ( ap_reg_ppstg_tmp_4_reg_409_pp0_it1 );
    sensitive << ( tmp_5_reg_437 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( ap_sig_bdd_164 );
    sensitive << ( ap_sig_bdd_213 );

    SC_METHOD(thread_orig_in_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_orig_out_addr_2_gep_fu_194_p3);
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_437_pp0_it2 );

    SC_METHOD(thread_orig_out_addr_4_gep_fu_185_p3);
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_437_pp0_it2 );

    SC_METHOD(thread_orig_out_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppstg_tmp_4_reg_409_pp0_it2 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_437_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_5 );
    sensitive << ( orig_out_addr_4_gep_fu_185_p3 );
    sensitive << ( orig_out_addr_2_gep_fu_194_p3 );

    SC_METHOD(thread_orig_out_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_5 );

    SC_METHOD(thread_orig_out_d0);
    sensitive << ( orig_out_q0 );
    sensitive << ( reg_232 );
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_orig_out_we0);
    sensitive << ( or_cond_reg_478 );
    sensitive << ( or_cond1_reg_487 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_reads_address0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_4_fu_267_p1 );

    SC_METHOD(thread_reads_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );

    SC_METHOD(thread_score_in_address0);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_4_reg_409 );

    SC_METHOD(thread_score_in_address1);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_5_fu_278_p1 );

    SC_METHOD(thread_score_in_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );

    SC_METHOD(thread_score_in_ce1);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );

    SC_METHOD(thread_score_out_addr_3_gep_fu_149_p3);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_5_reg_437 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_score_out_addr_4_gep_fu_141_p3);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_5_reg_437 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_score_out_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppstg_tmp_4_reg_409_pp0_it1 );
    sensitive << ( tmp_5_reg_437 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_3 );
    sensitive << ( score_out_addr_4_gep_fu_141_p3 );
    sensitive << ( score_out_addr_3_gep_fu_149_p3 );

    SC_METHOD(thread_score_out_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_3 );

    SC_METHOD(thread_score_out_d0);
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( tmp_11_fu_339_p1 );
    sensitive << ( tmp_13_fu_359_p1 );
    sensitive << ( tmp_12_fu_364_p1 );
    sensitive << ( ap_sig_bdd_164 );
    sensitive << ( ap_sig_bdd_213 );
    sensitive << ( ap_sig_bdd_216 );

    SC_METHOD(thread_score_out_we0);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( or_cond1_fu_353_p2 );

    SC_METHOD(thread_tmp_11_fu_339_p1);
    sensitive << ( diag_score_reg_463 );

    SC_METHOD(thread_tmp_12_fu_364_p1);
    sensitive << ( up_score_reg_471 );

    SC_METHOD(thread_tmp_13_fu_359_p1);
    sensitive << ( left_score_fu_318_p2 );

    SC_METHOD(thread_tmp_1_fu_368_p1);
    sensitive << ( score_out_load_reg_506 );

    SC_METHOD(thread_tmp_2_fu_375_p2);
    sensitive << ( max_score );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_5 );
    sensitive << ( tmp_1_fu_368_p1 );

    SC_METHOD(thread_tmp_3_fu_261_p2);
    sensitive << ( j_phi_fu_224_p4 );

    SC_METHOD(thread_tmp_4_fu_267_p1);
    sensitive << ( tmp_3_fu_261_p2 );

    SC_METHOD(thread_tmp_5_fu_278_p1);
    sensitive << ( j_reg_220 );

    SC_METHOD(thread_tmp_6_fu_283_p2);
    sensitive << ( ref_genome );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( reads_load_reg_422 );

    SC_METHOD(thread_tmp_7_fu_324_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( diag_score_reg_463 );
    sensitive << ( left_score_fu_318_p2 );

    SC_METHOD(thread_tmp_8_fu_329_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( diag_score_reg_463 );
    sensitive << ( up_score_reg_471 );

    SC_METHOD(thread_tmp_9_fu_343_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( diag_score_reg_463 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( left_score_fu_318_p2 );

    SC_METHOD(thread_tmp_fu_237_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( i );

    SC_METHOD(thread_tmp_s_fu_348_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( up_score_reg_471 );
    sensitive << ( or_cond_fu_333_p2 );
    sensitive << ( left_score_fu_318_p2 );

    SC_METHOD(thread_up_cast_fu_291_p1);
    sensitive << ( score_in_q1 );

    SC_METHOD(thread_up_score_fu_308_p2);
    sensitive << ( up_cast_fu_291_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( exitcond_fu_255_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp_2_fu_375_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    max_orig = "00000000000000000000000000000000";
    max_score = "00000000000000000000000000000000";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "needlemanWunsch_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, reads_address0, "(port)reads_address0");
    sc_trace(mVcdFile, reads_ce0, "(port)reads_ce0");
    sc_trace(mVcdFile, reads_q0, "(port)reads_q0");
    sc_trace(mVcdFile, ref_genome, "(port)ref_genome");
    sc_trace(mVcdFile, orig_in_address0, "(port)orig_in_address0");
    sc_trace(mVcdFile, orig_in_ce0, "(port)orig_in_ce0");
    sc_trace(mVcdFile, orig_in_q0, "(port)orig_in_q0");
    sc_trace(mVcdFile, orig_out_address0, "(port)orig_out_address0");
    sc_trace(mVcdFile, orig_out_ce0, "(port)orig_out_ce0");
    sc_trace(mVcdFile, orig_out_we0, "(port)orig_out_we0");
    sc_trace(mVcdFile, orig_out_d0, "(port)orig_out_d0");
    sc_trace(mVcdFile, orig_out_q0, "(port)orig_out_q0");
    sc_trace(mVcdFile, score_in_address0, "(port)score_in_address0");
    sc_trace(mVcdFile, score_in_ce0, "(port)score_in_ce0");
    sc_trace(mVcdFile, score_in_q0, "(port)score_in_q0");
    sc_trace(mVcdFile, score_in_address1, "(port)score_in_address1");
    sc_trace(mVcdFile, score_in_ce1, "(port)score_in_ce1");
    sc_trace(mVcdFile, score_in_q1, "(port)score_in_q1");
    sc_trace(mVcdFile, score_out_address0, "(port)score_out_address0");
    sc_trace(mVcdFile, score_out_ce0, "(port)score_out_ce0");
    sc_trace(mVcdFile, score_out_we0, "(port)score_out_we0");
    sc_trace(mVcdFile, score_out_d0, "(port)score_out_d0");
    sc_trace(mVcdFile, score_out_q0, "(port)score_out_q0");
    sc_trace(mVcdFile, i, "(port)i");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_24, "ap_sig_bdd_24");
    sc_trace(mVcdFile, max_orig, "max_orig");
    sc_trace(mVcdFile, max_score, "max_score");
    sc_trace(mVcdFile, j_reg_220, "j_reg_220");
    sc_trace(mVcdFile, reg_232, "reg_232");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_81, "ap_sig_bdd_81");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, or_cond_reg_478, "or_cond_reg_478");
    sc_trace(mVcdFile, or_cond1_reg_487, "or_cond1_reg_487");
    sc_trace(mVcdFile, exitcond_fu_255_p2, "exitcond_fu_255_p2");
    sc_trace(mVcdFile, exitcond_reg_405, "exitcond_reg_405");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_112, "ap_sig_bdd_112");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, tmp_4_fu_267_p1, "tmp_4_fu_267_p1");
    sc_trace(mVcdFile, tmp_4_reg_409, "tmp_4_reg_409");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_4_reg_409_pp0_it1, "ap_reg_ppstg_tmp_4_reg_409_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_4_reg_409_pp0_it2, "ap_reg_ppstg_tmp_4_reg_409_pp0_it2");
    sc_trace(mVcdFile, reads_load_reg_422, "reads_load_reg_422");
    sc_trace(mVcdFile, j_1_fu_272_p2, "j_1_fu_272_p2");
    sc_trace(mVcdFile, j_1_reg_427, "j_1_reg_427");
    sc_trace(mVcdFile, tmp_5_fu_278_p1, "tmp_5_fu_278_p1");
    sc_trace(mVcdFile, tmp_5_reg_437, "tmp_5_reg_437");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_5_reg_437_pp0_it2, "ap_reg_ppstg_tmp_5_reg_437_pp0_it2");
    sc_trace(mVcdFile, tmp_6_fu_283_p2, "tmp_6_fu_283_p2");
    sc_trace(mVcdFile, tmp_6_reg_453, "tmp_6_reg_453");
    sc_trace(mVcdFile, diag_score_fu_302_p2, "diag_score_fu_302_p2");
    sc_trace(mVcdFile, diag_score_reg_463, "diag_score_reg_463");
    sc_trace(mVcdFile, up_score_fu_308_p2, "up_score_fu_308_p2");
    sc_trace(mVcdFile, up_score_reg_471, "up_score_reg_471");
    sc_trace(mVcdFile, or_cond_fu_333_p2, "or_cond_fu_333_p2");
    sc_trace(mVcdFile, or_cond1_fu_353_p2, "or_cond1_fu_353_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_3, "ap_sig_cseq_ST_st9_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_176, "ap_sig_bdd_176");
    sc_trace(mVcdFile, score_out_load_reg_506, "score_out_load_reg_506");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_4, "ap_sig_cseq_ST_st10_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_184, "ap_sig_bdd_184");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_5, "ap_sig_cseq_ST_st11_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_193, "ap_sig_bdd_193");
    sc_trace(mVcdFile, tmp_2_fu_375_p2, "tmp_2_fu_375_p2");
    sc_trace(mVcdFile, j_phi_fu_224_p4, "j_phi_fu_224_p4");
    sc_trace(mVcdFile, score_out_addr_4_gep_fu_141_p3, "score_out_addr_4_gep_fu_141_p3");
    sc_trace(mVcdFile, score_out_addr_3_gep_fu_149_p3, "score_out_addr_3_gep_fu_149_p3");
    sc_trace(mVcdFile, orig_out_addr_4_gep_fu_185_p3, "orig_out_addr_4_gep_fu_185_p3");
    sc_trace(mVcdFile, orig_out_addr_2_gep_fu_194_p3, "orig_out_addr_2_gep_fu_194_p3");
    sc_trace(mVcdFile, tmp_fu_237_p2, "tmp_fu_237_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_6, "ap_sig_cseq_ST_st12_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_238, "ap_sig_bdd_238");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_7, "ap_sig_cseq_ST_st13_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_247, "ap_sig_bdd_247");
    sc_trace(mVcdFile, tmp_1_fu_368_p1, "tmp_1_fu_368_p1");
    sc_trace(mVcdFile, tmp_11_fu_339_p1, "tmp_11_fu_339_p1");
    sc_trace(mVcdFile, tmp_13_fu_359_p1, "tmp_13_fu_359_p1");
    sc_trace(mVcdFile, tmp_12_fu_364_p1, "tmp_12_fu_364_p1");
    sc_trace(mVcdFile, tmp_3_fu_261_p2, "tmp_3_fu_261_p2");
    sc_trace(mVcdFile, diag_cast_fu_287_p1, "diag_cast_fu_287_p1");
    sc_trace(mVcdFile, diag_score_0_v_cast_cast_fu_295_p3, "diag_score_0_v_cast_cast_fu_295_p3");
    sc_trace(mVcdFile, up_cast_fu_291_p1, "up_cast_fu_291_p1");
    sc_trace(mVcdFile, left_cast_fu_314_p1, "left_cast_fu_314_p1");
    sc_trace(mVcdFile, left_score_fu_318_p2, "left_score_fu_318_p2");
    sc_trace(mVcdFile, tmp_7_fu_324_p2, "tmp_7_fu_324_p2");
    sc_trace(mVcdFile, tmp_8_fu_329_p2, "tmp_8_fu_329_p2");
    sc_trace(mVcdFile, tmp_9_fu_343_p2, "tmp_9_fu_343_p2");
    sc_trace(mVcdFile, tmp_s_fu_348_p2, "tmp_s_fu_348_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_164, "ap_sig_bdd_164");
    sc_trace(mVcdFile, ap_sig_bdd_213, "ap_sig_bdd_213");
    sc_trace(mVcdFile, ap_sig_bdd_216, "ap_sig_bdd_216");
#endif

    }
    mHdltvinHandle.open("needlemanWunsch.hdltvin.dat");
    mHdltvoutHandle.open("needlemanWunsch.hdltvout.dat");
}

needlemanWunsch::~needlemanWunsch() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void needlemanWunsch::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read()))) {
        j_reg_220 = j_1_reg_427.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_220 = ap_const_lv7_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_6.read())) {
        max_orig = orig_out_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_237_p2.read()))) {
        max_orig = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_375_p2.read()))) {
        max_score = tmp_1_fu_368_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_237_p2.read()))) {
        max_score = ap_const_lv32_FFFFFF9C;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
        ap_reg_ppstg_tmp_4_reg_409_pp0_it1 = tmp_4_reg_409.read();
        ap_reg_ppstg_tmp_4_reg_409_pp0_it2 = ap_reg_ppstg_tmp_4_reg_409_pp0_it1.read();
        ap_reg_ppstg_tmp_5_reg_437_pp0_it2 = tmp_5_reg_437.read();
        exitcond_reg_405 = exitcond_fu_255_p2.read();
        or_cond_reg_478 = or_cond_fu_333_p2.read();
        tmp_5_reg_437 = tmp_5_fu_278_p1.read();
        tmp_6_reg_453 = tmp_6_fu_283_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
        diag_score_reg_463 = diag_score_fu_302_p2.read();
        up_score_reg_471 = up_score_fu_308_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read()))) {
        j_1_reg_427 = j_1_fu_272_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()))) {
        or_cond1_reg_487 = or_cond1_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read()))) {
        reads_load_reg_422 = reads_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
  esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
  !esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read())))) {
        reg_232 = orig_in_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_4.read())) {
        score_out_load_reg_506 = score_out_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()))) {
        tmp_4_reg_409 = tmp_4_fu_267_p1.read();
    }
}

void needlemanWunsch::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_return() {
    ap_return = max_orig.read();
}

void needlemanWunsch::thread_ap_sig_bdd_112() {
    ap_sig_bdd_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void needlemanWunsch::thread_ap_sig_bdd_164() {
    ap_sig_bdd_164 = (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read()));
}

void needlemanWunsch::thread_ap_sig_bdd_176() {
    ap_sig_bdd_176 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void needlemanWunsch::thread_ap_sig_bdd_184() {
    ap_sig_bdd_184 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void needlemanWunsch::thread_ap_sig_bdd_193() {
    ap_sig_bdd_193 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void needlemanWunsch::thread_ap_sig_bdd_213() {
    ap_sig_bdd_213 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()));
}

void needlemanWunsch::thread_ap_sig_bdd_216() {
    ap_sig_bdd_216 = (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read()));
}

void needlemanWunsch::thread_ap_sig_bdd_238() {
    ap_sig_bdd_238 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void needlemanWunsch::thread_ap_sig_bdd_24() {
    ap_sig_bdd_24 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void needlemanWunsch::thread_ap_sig_bdd_247() {
    ap_sig_bdd_247 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void needlemanWunsch::thread_ap_sig_bdd_81() {
    ap_sig_bdd_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void needlemanWunsch::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_112.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_81.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st10_fsm_4() {
    if (ap_sig_bdd_184.read()) {
        ap_sig_cseq_ST_st10_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_4 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st11_fsm_5() {
    if (ap_sig_bdd_193.read()) {
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st12_fsm_6() {
    if (ap_sig_bdd_238.read()) {
        ap_sig_cseq_ST_st12_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_6 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st13_fsm_7() {
    if (ap_sig_bdd_247.read()) {
        ap_sig_cseq_ST_st13_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_7 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_24.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_ap_sig_cseq_ST_st9_fsm_3() {
    if (ap_sig_bdd_176.read()) {
        ap_sig_cseq_ST_st9_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_3 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_diag_cast_fu_287_p1() {
    diag_cast_fu_287_p1 = esl_sext<9,8>(score_in_q0.read());
}

void needlemanWunsch::thread_diag_score_0_v_cast_cast_fu_295_p3() {
    diag_score_0_v_cast_cast_fu_295_p3 = (!tmp_6_reg_453.read()[0].is_01())? sc_lv<9>(): ((tmp_6_reg_453.read()[0].to_bool())? ap_const_lv9_1: ap_const_lv9_1FF);
}

void needlemanWunsch::thread_diag_score_fu_302_p2() {
    diag_score_fu_302_p2 = (!diag_cast_fu_287_p1.read().is_01() || !diag_score_0_v_cast_cast_fu_295_p3.read().is_01())? sc_lv<9>(): (sc_bigint<9>(diag_cast_fu_287_p1.read()) + sc_biguint<9>(diag_score_0_v_cast_cast_fu_295_p3.read()));
}

void needlemanWunsch::thread_exitcond_fu_255_p2() {
    exitcond_fu_255_p2 = (!j_phi_fu_224_p4.read().is_01() || !ap_const_lv7_65.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_224_p4.read() == ap_const_lv7_65);
}

void needlemanWunsch::thread_j_1_fu_272_p2() {
    j_1_fu_272_p2 = (!j_reg_220.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_reg_220.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void needlemanWunsch::thread_j_phi_fu_224_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_405.read()))) {
        j_phi_fu_224_p4 = j_1_reg_427.read();
    } else {
        j_phi_fu_224_p4 = j_reg_220.read();
    }
}

void needlemanWunsch::thread_left_cast_fu_314_p1() {
    left_cast_fu_314_p1 = esl_sext<9,8>(score_out_q0.read());
}

void needlemanWunsch::thread_left_score_fu_318_p2() {
    left_score_fu_318_p2 = (!left_cast_fu_314_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_bigint<9>(left_cast_fu_314_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void needlemanWunsch::thread_or_cond1_fu_353_p2() {
    or_cond1_fu_353_p2 = (tmp_9_fu_343_p2.read() | tmp_s_fu_348_p2.read());
}

void needlemanWunsch::thread_or_cond_fu_333_p2() {
    or_cond_fu_333_p2 = (tmp_7_fu_324_p2.read() | tmp_8_fu_329_p2.read());
}

void needlemanWunsch::thread_orig_in_address0() {
    if (ap_sig_bdd_213.read()) {
        if (ap_sig_bdd_164.read()) {
            orig_in_address0 =  (sc_lv<7>) (tmp_5_reg_437.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read())) {
            orig_in_address0 =  (sc_lv<7>) (ap_reg_ppstg_tmp_4_reg_409_pp0_it1.read());
        } else {
            orig_in_address0 = "XXXXXXX";
        }
    } else {
        orig_in_address0 = "XXXXXXX";
    }
}

void needlemanWunsch::thread_orig_in_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read())))) {
        orig_in_ce0 = ap_const_logic_1;
    } else {
        orig_in_ce0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_orig_out_addr_2_gep_fu_194_p3() {
    orig_out_addr_2_gep_fu_194_p3 =  (sc_lv<7>) (ap_reg_ppstg_tmp_5_reg_437_pp0_it2.read());
}

void needlemanWunsch::thread_orig_out_addr_4_gep_fu_185_p3() {
    orig_out_addr_4_gep_fu_185_p3 =  (sc_lv<7>) (ap_reg_ppstg_tmp_5_reg_437_pp0_it2.read());
}

void needlemanWunsch::thread_orig_out_address0() {
    if ((!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) {
        orig_out_address0 = orig_out_addr_2_gep_fu_194_p3.read();
    } else if ((!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) {
        orig_out_address0 = orig_out_addr_4_gep_fu_185_p3.read();
    } else if ((esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) {
        orig_out_address0 =  (sc_lv<7>) (ap_reg_ppstg_tmp_5_reg_437_pp0_it2.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_5.read())) {
        orig_out_address0 =  (sc_lv<7>) (ap_const_lv64_64);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) {
        orig_out_address0 =  (sc_lv<7>) (ap_reg_ppstg_tmp_4_reg_409_pp0_it2.read());
    } else {
        orig_out_address0 = "XXXXXXX";
    }
}

void needlemanWunsch::thread_orig_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) || 
         (esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) || 
         (!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) || 
         (!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
        orig_out_ce0 = ap_const_logic_1;
    } else {
        orig_out_ce0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_orig_out_d0() {
    if ((!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) {
        orig_out_d0 = orig_out_q0.read();
    } else if (((esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) || 
                (!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
        orig_out_d0 = reg_232.read();
    } else {
        orig_out_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void needlemanWunsch::thread_orig_out_we0() {
    if (((esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) || 
         (!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) || 
         (!esl_seteq<1,1,1>(or_cond_reg_478.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_487.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
        orig_out_we0 = ap_const_logic_1;
    } else {
        orig_out_we0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_reads_address0() {
    reads_address0 =  (sc_lv<7>) (tmp_4_fu_267_p1.read());
}

void needlemanWunsch::thread_reads_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()))) {
        reads_ce0 = ap_const_logic_1;
    } else {
        reads_ce0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_score_in_address0() {
    score_in_address0 =  (sc_lv<7>) (tmp_4_reg_409.read());
}

void needlemanWunsch::thread_score_in_address1() {
    score_in_address1 =  (sc_lv<7>) (tmp_5_fu_278_p1.read());
}

void needlemanWunsch::thread_score_in_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()))) {
        score_in_ce0 = ap_const_logic_1;
    } else {
        score_in_ce0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_score_in_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()))) {
        score_in_ce1 = ap_const_logic_1;
    } else {
        score_in_ce1 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_score_out_addr_3_gep_fu_149_p3() {
    score_out_addr_3_gep_fu_149_p3 =  (sc_lv<7>) (tmp_5_reg_437.read());
}

void needlemanWunsch::thread_score_out_addr_4_gep_fu_141_p3() {
    score_out_addr_4_gep_fu_141_p3 =  (sc_lv<7>) (tmp_5_reg_437.read());
}

void needlemanWunsch::thread_score_out_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read()))) {
        score_out_address0 = score_out_addr_3_gep_fu_149_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read()))) {
        score_out_address0 = score_out_addr_4_gep_fu_141_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()))) {
        score_out_address0 =  (sc_lv<7>) (tmp_5_reg_437.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_3.read())) {
        score_out_address0 =  (sc_lv<7>) (ap_const_lv64_64);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        score_out_address0 =  (sc_lv<7>) (ap_reg_ppstg_tmp_4_reg_409_pp0_it1.read());
    } else {
        score_out_address0 = "XXXXXXX";
    }
}

void needlemanWunsch::thread_score_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read())))) {
        score_out_ce0 = ap_const_logic_1;
    } else {
        score_out_ce0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_score_out_d0() {
    if (ap_sig_bdd_213.read()) {
        if (ap_sig_bdd_164.read()) {
            score_out_d0 = tmp_12_fu_364_p1.read();
        } else if (ap_sig_bdd_216.read()) {
            score_out_d0 = tmp_13_fu_359_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read())) {
            score_out_d0 = tmp_11_fu_339_p1.read();
        } else {
            score_out_d0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        score_out_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void needlemanWunsch::thread_score_out_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_333_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_353_p2.read())))) {
        score_out_we0 = ap_const_logic_1;
    } else {
        score_out_we0 = ap_const_logic_0;
    }
}

void needlemanWunsch::thread_tmp_11_fu_339_p1() {
    tmp_11_fu_339_p1 = diag_score_reg_463.read().range(8-1, 0);
}

void needlemanWunsch::thread_tmp_12_fu_364_p1() {
    tmp_12_fu_364_p1 = up_score_reg_471.read().range(8-1, 0);
}

void needlemanWunsch::thread_tmp_13_fu_359_p1() {
    tmp_13_fu_359_p1 = left_score_fu_318_p2.read().range(8-1, 0);
}

void needlemanWunsch::thread_tmp_1_fu_368_p1() {
    tmp_1_fu_368_p1 = esl_sext<32,8>(score_out_load_reg_506.read());
}

void needlemanWunsch::thread_tmp_2_fu_375_p2() {
    tmp_2_fu_375_p2 = (!tmp_1_fu_368_p1.read().is_01() || !max_score.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_1_fu_368_p1.read()) > sc_bigint<32>(max_score.read()));
}

void needlemanWunsch::thread_tmp_3_fu_261_p2() {
    tmp_3_fu_261_p2 = (!j_phi_fu_224_p4.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<7>(): (sc_biguint<7>(j_phi_fu_224_p4.read()) + sc_bigint<7>(ap_const_lv7_7F));
}

void needlemanWunsch::thread_tmp_4_fu_267_p1() {
    tmp_4_fu_267_p1 = esl_zext<64,7>(tmp_3_fu_261_p2.read());
}

void needlemanWunsch::thread_tmp_5_fu_278_p1() {
    tmp_5_fu_278_p1 = esl_zext<64,7>(j_reg_220.read());
}

void needlemanWunsch::thread_tmp_6_fu_283_p2() {
    tmp_6_fu_283_p2 = (!reads_load_reg_422.read().is_01() || !ref_genome.read().is_01())? sc_lv<1>(): sc_lv<1>(reads_load_reg_422.read() == ref_genome.read());
}

void needlemanWunsch::thread_tmp_7_fu_324_p2() {
    tmp_7_fu_324_p2 = (!diag_score_reg_463.read().is_01() || !left_score_fu_318_p2.read().is_01())? sc_lv<1>(): (sc_bigint<9>(diag_score_reg_463.read()) < sc_bigint<9>(left_score_fu_318_p2.read()));
}

void needlemanWunsch::thread_tmp_8_fu_329_p2() {
    tmp_8_fu_329_p2 = (!diag_score_reg_463.read().is_01() || !up_score_reg_471.read().is_01())? sc_lv<1>(): (sc_bigint<9>(diag_score_reg_463.read()) < sc_bigint<9>(up_score_reg_471.read()));
}

void needlemanWunsch::thread_tmp_9_fu_343_p2() {
    tmp_9_fu_343_p2 = (!left_score_fu_318_p2.read().is_01() || !diag_score_reg_463.read().is_01())? sc_lv<1>(): (sc_bigint<9>(left_score_fu_318_p2.read()) < sc_bigint<9>(diag_score_reg_463.read()));
}

void needlemanWunsch::thread_tmp_fu_237_p2() {
    tmp_fu_237_p2 = (!i.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(i.read() == ap_const_lv32_1);
}

void needlemanWunsch::thread_tmp_s_fu_348_p2() {
    tmp_s_fu_348_p2 = (!left_score_fu_318_p2.read().is_01() || !up_score_reg_471.read().is_01())? sc_lv<1>(): (sc_bigint<9>(left_score_fu_318_p2.read()) < sc_bigint<9>(up_score_reg_471.read()));
}

void needlemanWunsch::thread_up_cast_fu_291_p1() {
    up_cast_fu_291_p1 = esl_sext<9,8>(score_in_q1.read());
}

void needlemanWunsch::thread_up_score_fu_308_p2() {
    up_score_fu_308_p2 = (!up_cast_fu_291_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_bigint<9>(up_cast_fu_291_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void needlemanWunsch::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_NS_fsm = ap_ST_st9_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st11_fsm_5;
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_375_p2.read())) {
                ap_NS_fsm = ap_ST_st13_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st13_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void needlemanWunsch::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"reads_address0\" :  \"" << reads_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"reads_ce0\" :  \"" << reads_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"reads_q0\" :  \"" << reads_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_genome\" :  \"" << ref_genome.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_in_address0\" :  \"" << orig_in_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_in_ce0\" :  \"" << orig_in_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"orig_in_q0\" :  \"" << orig_in_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_out_address0\" :  \"" << orig_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_out_ce0\" :  \"" << orig_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_out_we0\" :  \"" << orig_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"orig_out_d0\" :  \"" << orig_out_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"orig_out_q0\" :  \"" << orig_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_in_address0\" :  \"" << score_in_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_in_ce0\" :  \"" << score_in_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"score_in_q0\" :  \"" << score_in_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_in_address1\" :  \"" << score_in_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_in_ce1\" :  \"" << score_in_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"score_in_q1\" :  \"" << score_in_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_out_address0\" :  \"" << score_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_out_ce0\" :  \"" << score_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_out_we0\" :  \"" << score_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"score_out_d0\" :  \"" << score_out_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"score_out_q0\" :  \"" << score_out_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i\" :  \"" << i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

