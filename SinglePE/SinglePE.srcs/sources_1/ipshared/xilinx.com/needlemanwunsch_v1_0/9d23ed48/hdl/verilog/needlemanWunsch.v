// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="needlemanWunsch,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.088000,HLS_SYN_LAT=113500001,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=762,HLS_SYN_LUT=1235}" *)

module needlemanWunsch (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        read_r_Addr_A,
        read_r_EN_A,
        read_r_WEN_A,
        read_r_Din_A,
        read_r_Dout_A,
        read_r_Clk_A,
        read_r_Rst_A,
        ref_genome_TDATA,
        ref_genome_TVALID,
        ref_genome_TREADY,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 19'b1;
parameter    ap_ST_st2_fsm_1 = 19'b10;
parameter    ap_ST_st3_fsm_2 = 19'b100;
parameter    ap_ST_st4_fsm_3 = 19'b1000;
parameter    ap_ST_st5_fsm_4 = 19'b10000;
parameter    ap_ST_st6_fsm_5 = 19'b100000;
parameter    ap_ST_st7_fsm_6 = 19'b1000000;
parameter    ap_ST_st8_fsm_7 = 19'b10000000;
parameter    ap_ST_st9_fsm_8 = 19'b100000000;
parameter    ap_ST_st10_fsm_9 = 19'b1000000000;
parameter    ap_ST_st11_fsm_10 = 19'b10000000000;
parameter    ap_ST_st12_fsm_11 = 19'b100000000000;
parameter    ap_ST_st13_fsm_12 = 19'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 19'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 19'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 19'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 19'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 19'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 19'b1000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv20_1 = 20'b1;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv32_FFFFFF9C = 32'b11111111111111111111111110011100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv64_63 = 64'b1100011;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv20_F4241 = 20'b11110100001001000001;
parameter    ap_const_lv20_2 = 20'b10;
parameter    ap_const_lv20_3 = 20'b11;
parameter    ap_const_lv20_4 = 20'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [31:0] read_r_Addr_A;
output   read_r_EN_A;
output  [3:0] read_r_WEN_A;
output  [31:0] read_r_Din_A;
input  [31:0] read_r_Dout_A;
output   read_r_Clk_A;
output   read_r_Rst_A;
input  [7:0] ref_genome_TDATA;
input   ref_genome_TVALID;
output   ref_genome_TREADY;
output   interrupt;

reg read_r_EN_A;
reg read_r_Rst_A;
reg ref_genome_TREADY;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm = 19'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_60;
reg    ap_ready;
wire   [19:0] ap_return;
wire    needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [7:0] score2_q0;
reg   [7:0] reg_187;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_101;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_108;
wire   [19:0] orig2_q0;
reg   [19:0] reg_191;
wire   [7:0] score1_q0;
reg   [7:0] reg_195;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_120;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_127;
wire   [6:0] score2_addr_gep_fu_90_p3;
reg   [6:0] score2_addr_reg_375;
wire   [6:0] orig2_addr_gep_fu_98_p3;
reg   [6:0] orig2_addr_reg_380;
wire   [6:0] score1_addr_gep_fu_106_p3;
reg   [6:0] score1_addr_reg_385;
wire   [6:0] orig1_addr_gep_fu_114_p3;
reg   [6:0] orig1_addr_reg_390;
wire   [1:0] ref_a_fu_205_p1;
reg   [1:0] ref_a_reg_398;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_148;
wire   [0:0] tmp_fu_199_p2;
reg    ap_sig_bdd_156;
reg   [1:0] ref_b_reg_403;
reg   [1:0] ref_c_reg_408;
reg   [1:0] ref_d_reg_413;
wire   [0:0] tmp_3_fu_244_p2;
reg   [0:0] tmp_3_reg_418;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_173;
wire   [31:0] max_score_5_max_score_fu_250_p3;
reg   [31:0] max_score_5_max_score_reg_423;
wire   [19:0] i_1_fu_258_p2;
reg   [19:0] i_1_reg_429;
wire   [19:0] orig1_q0;
reg   [19:0] max_orig_2_reg_434;
wire   [31:0] max_score_2_fu_274_p3;
reg   [31:0] max_score_2_reg_439;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_188;
wire   [19:0] i_2_fu_281_p2;
reg   [19:0] i_2_reg_445;
wire   [19:0] newSel1_fu_288_p3;
reg   [19:0] newSel1_reg_450;
wire   [0:0] or_cond2_fu_295_p2;
reg   [0:0] or_cond2_reg_455;
wire   [0:0] tmp_5_fu_304_p2;
reg   [0:0] tmp_5_reg_460;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_203;
wire   [31:0] max_score_7_max_score_2_fu_309_p3;
reg   [31:0] max_score_7_max_score_2_reg_465;
wire   [19:0] i_3_fu_316_p2;
reg   [19:0] i_3_reg_471;
wire   [19:0] i_4_fu_323_p2;
reg   [19:0] i_4_reg_476;
wire   [19:0] newSel_fu_338_p3;
reg   [19:0] newSel_reg_481;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_218;
wire   [0:0] or_cond_fu_346_p2;
reg   [0:0] or_cond_reg_486;
wire   [31:0] max_score_4_fu_351_p3;
reg   [31:0] max_score_4_reg_492;
wire   [19:0] max_orig_5_fu_367_p3;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_231;
reg   [6:0] score1_address0;
reg    score1_ce0;
reg    score1_we0;
wire   [7:0] score1_d0;
reg   [6:0] score2_address0;
reg    score2_ce0;
reg    score2_we0;
wire   [7:0] score2_d0;
reg   [6:0] orig1_address0;
reg    orig1_ce0;
reg    orig1_we0;
wire   [19:0] orig1_d0;
reg   [6:0] orig2_address0;
reg    orig2_ce0;
reg    orig2_we0;
wire   [19:0] orig2_d0;
wire    grp_needlemanWunsch_doRow_fu_174_ap_start;
wire    grp_needlemanWunsch_doRow_fu_174_ap_done;
wire    grp_needlemanWunsch_doRow_fu_174_ap_idle;
wire    grp_needlemanWunsch_doRow_fu_174_ap_ready;
reg   [19:0] grp_needlemanWunsch_doRow_fu_174_i;
wire   [31:0] grp_needlemanWunsch_doRow_fu_174_read_r_Addr_A;
wire    grp_needlemanWunsch_doRow_fu_174_read_r_EN_A;
wire   [3:0] grp_needlemanWunsch_doRow_fu_174_read_r_WEN_A;
wire   [31:0] grp_needlemanWunsch_doRow_fu_174_read_r_Din_A;
wire   [31:0] grp_needlemanWunsch_doRow_fu_174_read_r_Dout_A;
reg   [1:0] grp_needlemanWunsch_doRow_fu_174_ref_genome;
wire   [6:0] grp_needlemanWunsch_doRow_fu_174_score_in_address0;
wire    grp_needlemanWunsch_doRow_fu_174_score_in_ce0;
reg   [7:0] grp_needlemanWunsch_doRow_fu_174_score_in_q0;
wire   [6:0] grp_needlemanWunsch_doRow_fu_174_score_out_address0;
wire    grp_needlemanWunsch_doRow_fu_174_score_out_ce0;
wire    grp_needlemanWunsch_doRow_fu_174_score_out_we0;
wire   [7:0] grp_needlemanWunsch_doRow_fu_174_score_out_d0;
wire   [6:0] grp_needlemanWunsch_doRow_fu_174_orig_in_address0;
wire    grp_needlemanWunsch_doRow_fu_174_orig_in_ce0;
reg   [19:0] grp_needlemanWunsch_doRow_fu_174_orig_in_q0;
wire   [6:0] grp_needlemanWunsch_doRow_fu_174_orig_out_address0;
wire    grp_needlemanWunsch_doRow_fu_174_orig_out_ce0;
wire    grp_needlemanWunsch_doRow_fu_174_orig_out_we0;
wire   [19:0] grp_needlemanWunsch_doRow_fu_174_orig_out_d0;
reg   [19:0] i_reg_138;
reg   [19:0] max_orig_reg_150;
reg   [31:0] max_score_reg_162;
reg    grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_313;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_320;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_327;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_334;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_348;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_355;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_363;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_370;
wire  signed [31:0] max_score_1_fu_240_p1;
wire  signed [31:0] max_score_3_fu_265_p1;
wire   [0:0] tmp_4_fu_269_p2;
wire  signed [31:0] max_score_5_fu_300_p1;
wire  signed [31:0] max_score_6_fu_329_p1;
wire   [0:0] tmp_6_fu_333_p2;
wire   [0:0] or_cond4_fu_363_p2;
wire   [19:0] newSel3_fu_358_p3;
reg   [18:0] ap_NS_fsm;


needlemanWunsch_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
needlemanWunsch_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ap_return( ap_return )
);

needlemanWunsch_score1 #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
score1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( score1_address0 ),
    .ce0( score1_ce0 ),
    .we0( score1_we0 ),
    .d0( score1_d0 ),
    .q0( score1_q0 )
);

needlemanWunsch_score1 #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
score2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( score2_address0 ),
    .ce0( score2_ce0 ),
    .we0( score2_we0 ),
    .d0( score2_d0 ),
    .q0( score2_q0 )
);

needlemanWunsch_orig1 #(
    .DataWidth( 20 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
orig1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( orig1_address0 ),
    .ce0( orig1_ce0 ),
    .we0( orig1_we0 ),
    .d0( orig1_d0 ),
    .q0( orig1_q0 )
);

needlemanWunsch_orig1 #(
    .DataWidth( 20 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
orig2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( orig2_address0 ),
    .ce0( orig2_ce0 ),
    .we0( orig2_we0 ),
    .d0( orig2_d0 ),
    .q0( orig2_q0 )
);

needlemanWunsch_doRow grp_needlemanWunsch_doRow_fu_174(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_needlemanWunsch_doRow_fu_174_ap_start ),
    .ap_done( grp_needlemanWunsch_doRow_fu_174_ap_done ),
    .ap_idle( grp_needlemanWunsch_doRow_fu_174_ap_idle ),
    .ap_ready( grp_needlemanWunsch_doRow_fu_174_ap_ready ),
    .i( grp_needlemanWunsch_doRow_fu_174_i ),
    .read_r_Addr_A( grp_needlemanWunsch_doRow_fu_174_read_r_Addr_A ),
    .read_r_EN_A( grp_needlemanWunsch_doRow_fu_174_read_r_EN_A ),
    .read_r_WEN_A( grp_needlemanWunsch_doRow_fu_174_read_r_WEN_A ),
    .read_r_Din_A( grp_needlemanWunsch_doRow_fu_174_read_r_Din_A ),
    .read_r_Dout_A( grp_needlemanWunsch_doRow_fu_174_read_r_Dout_A ),
    .ref_genome( grp_needlemanWunsch_doRow_fu_174_ref_genome ),
    .score_in_address0( grp_needlemanWunsch_doRow_fu_174_score_in_address0 ),
    .score_in_ce0( grp_needlemanWunsch_doRow_fu_174_score_in_ce0 ),
    .score_in_q0( grp_needlemanWunsch_doRow_fu_174_score_in_q0 ),
    .score_out_address0( grp_needlemanWunsch_doRow_fu_174_score_out_address0 ),
    .score_out_ce0( grp_needlemanWunsch_doRow_fu_174_score_out_ce0 ),
    .score_out_we0( grp_needlemanWunsch_doRow_fu_174_score_out_we0 ),
    .score_out_d0( grp_needlemanWunsch_doRow_fu_174_score_out_d0 ),
    .orig_in_address0( grp_needlemanWunsch_doRow_fu_174_orig_in_address0 ),
    .orig_in_ce0( grp_needlemanWunsch_doRow_fu_174_orig_in_ce0 ),
    .orig_in_q0( grp_needlemanWunsch_doRow_fu_174_orig_in_q0 ),
    .orig_out_address0( grp_needlemanWunsch_doRow_fu_174_orig_out_address0 ),
    .orig_out_ce0( grp_needlemanWunsch_doRow_fu_174_orig_out_ce0 ),
    .orig_out_we0( grp_needlemanWunsch_doRow_fu_174_orig_out_we0 ),
    .orig_out_d0( grp_needlemanWunsch_doRow_fu_174_orig_out_d0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
            grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_needlemanWunsch_doRow_fu_174_ap_ready)) begin
            grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        i_reg_138 <= i_4_reg_476;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_138 <= ap_const_lv20_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        max_orig_reg_150 <= max_orig_5_fu_367_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        max_orig_reg_150 <= ap_const_lv20_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        max_score_reg_162 <= max_score_4_reg_492;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        max_score_reg_162 <= ap_const_lv32_FFFFFF9C;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_1_reg_429 <= i_1_fu_258_p2;
        max_score_5_max_score_reg_423 <= max_score_5_max_score_fu_250_p3;
        tmp_3_reg_418 <= tmp_3_fu_244_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        i_2_reg_445 <= i_2_fu_281_p2;
        max_score_2_reg_439 <= max_score_2_fu_274_p3;
        newSel1_reg_450 <= newSel1_fu_288_p3;
        or_cond2_reg_455 <= or_cond2_fu_295_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i_3_reg_471 <= i_3_fu_316_p2;
        i_4_reg_476 <= i_4_fu_323_p2;
        max_score_7_max_score_2_reg_465 <= max_score_7_max_score_2_fu_309_p3;
        tmp_5_reg_460 <= tmp_5_fu_304_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        max_orig_2_reg_434 <= orig1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        max_score_4_reg_492 <= max_score_4_fu_351_p3;
        newSel_reg_481 <= newSel_fu_338_p3;
        or_cond_reg_486 <= or_cond_fu_346_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
        ref_a_reg_398 <= ref_a_fu_205_p1;
        ref_b_reg_403 <= {{ref_genome_TDATA[ap_const_lv32_3 : ap_const_lv32_2]}};
        ref_c_reg_408 <= {{ref_genome_TDATA[ap_const_lv32_5 : ap_const_lv32_4]}};
        ref_d_reg_413 <= {{ref_genome_TDATA[ap_const_lv32_7 : ap_const_lv32_6]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        reg_187 <= score2_q0;
        reg_191 <= orig2_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        reg_195 <= score1_q0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_199_p2 or ap_sig_bdd_156)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_199_p2 or ap_sig_bdd_156)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_188)
begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_327)
begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_355)
begin
    if (ap_sig_bdd_355) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_108)
begin
    if (ap_sig_bdd_108) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_203)
begin
    if (ap_sig_bdd_203) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_334)
begin
    if (ap_sig_bdd_334) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_370)
begin
    if (ap_sig_bdd_370) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_127)
begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_218)
begin
    if (ap_sig_bdd_218) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_231)
begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_148)
begin
    if (ap_sig_bdd_148) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_313)
begin
    if (ap_sig_bdd_313) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_348)
begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_101)
begin
    if (ap_sig_bdd_101) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_173)
begin
    if (ap_sig_bdd_173) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_320)
begin
    if (ap_sig_bdd_320) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_363)
begin
    if (ap_sig_bdd_363) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_120)
begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_needlemanWunsch_doRow_fu_174_i assign process. ///
always @ (i_1_reg_429 or i_2_reg_445 or i_3_reg_471 or i_reg_138 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_needlemanWunsch_doRow_fu_174_i = i_3_reg_471;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_needlemanWunsch_doRow_fu_174_i = i_2_reg_445;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_needlemanWunsch_doRow_fu_174_i = i_1_reg_429;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_needlemanWunsch_doRow_fu_174_i = i_reg_138;
    end else begin
        grp_needlemanWunsch_doRow_fu_174_i = 'bx;
    end
end

/// grp_needlemanWunsch_doRow_fu_174_orig_in_q0 assign process. ///
always @ (orig2_q0 or orig1_q0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        grp_needlemanWunsch_doRow_fu_174_orig_in_q0 = orig2_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        grp_needlemanWunsch_doRow_fu_174_orig_in_q0 = orig1_q0;
    end else begin
        grp_needlemanWunsch_doRow_fu_174_orig_in_q0 = 'bx;
    end
end

/// grp_needlemanWunsch_doRow_fu_174_ref_genome assign process. ///
always @ (ref_a_reg_398 or ref_b_reg_403 or ref_c_reg_408 or ref_d_reg_413 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_needlemanWunsch_doRow_fu_174_ref_genome = ref_d_reg_413;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_needlemanWunsch_doRow_fu_174_ref_genome = ref_c_reg_408;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_needlemanWunsch_doRow_fu_174_ref_genome = ref_b_reg_403;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_needlemanWunsch_doRow_fu_174_ref_genome = ref_a_reg_398;
    end else begin
        grp_needlemanWunsch_doRow_fu_174_ref_genome = 'bx;
    end
end

/// grp_needlemanWunsch_doRow_fu_174_score_in_q0 assign process. ///
always @ (score2_q0 or score1_q0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        grp_needlemanWunsch_doRow_fu_174_score_in_q0 = score2_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        grp_needlemanWunsch_doRow_fu_174_score_in_q0 = score1_q0;
    end else begin
        grp_needlemanWunsch_doRow_fu_174_score_in_q0 = 'bx;
    end
end

/// orig1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or orig1_addr_reg_390 or grp_needlemanWunsch_doRow_fu_174_orig_in_address0 or grp_needlemanWunsch_doRow_fu_174_orig_out_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        orig1_address0 = orig1_addr_reg_390;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        orig1_address0 = grp_needlemanWunsch_doRow_fu_174_orig_out_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        orig1_address0 = grp_needlemanWunsch_doRow_fu_174_orig_in_address0;
    end else begin
        orig1_address0 = 'bx;
    end
end

/// orig1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or grp_needlemanWunsch_doRow_fu_174_orig_in_ce0 or grp_needlemanWunsch_doRow_fu_174_orig_out_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        orig1_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        orig1_ce0 = grp_needlemanWunsch_doRow_fu_174_orig_out_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        orig1_ce0 = grp_needlemanWunsch_doRow_fu_174_orig_in_ce0;
    end else begin
        orig1_ce0 = ap_const_logic_0;
    end
end

/// orig1_we0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_orig_out_we0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        orig1_we0 = grp_needlemanWunsch_doRow_fu_174_orig_out_we0;
    end else begin
        orig1_we0 = ap_const_logic_0;
    end
end

/// orig2_address0 assign process. ///
always @ (orig2_addr_reg_380 or grp_needlemanWunsch_doRow_fu_174_orig_in_address0 or grp_needlemanWunsch_doRow_fu_174_orig_out_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        orig2_address0 = orig2_addr_reg_380;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        orig2_address0 = grp_needlemanWunsch_doRow_fu_174_orig_out_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        orig2_address0 = grp_needlemanWunsch_doRow_fu_174_orig_in_address0;
    end else begin
        orig2_address0 = 'bx;
    end
end

/// orig2_ce0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_orig_in_ce0 or grp_needlemanWunsch_doRow_fu_174_orig_out_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        orig2_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        orig2_ce0 = grp_needlemanWunsch_doRow_fu_174_orig_out_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        orig2_ce0 = grp_needlemanWunsch_doRow_fu_174_orig_in_ce0;
    end else begin
        orig2_ce0 = ap_const_logic_0;
    end
end

/// orig2_we0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_orig_out_we0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        orig2_we0 = grp_needlemanWunsch_doRow_fu_174_orig_out_we0;
    end else begin
        orig2_we0 = ap_const_logic_0;
    end
end

/// read_r_EN_A assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_read_r_EN_A or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        read_r_EN_A = grp_needlemanWunsch_doRow_fu_174_read_r_EN_A;
    end else begin
        read_r_EN_A = ap_const_logic_0;
    end
end

/// ref_genome_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_199_p2 or ap_sig_bdd_156)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
        ref_genome_TREADY = ap_const_logic_1;
    end else begin
        ref_genome_TREADY = ap_const_logic_0;
    end
end

/// score1_address0 assign process. ///
always @ (score1_addr_reg_385 or grp_needlemanWunsch_doRow_fu_174_score_in_address0 or grp_needlemanWunsch_doRow_fu_174_score_out_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st16_fsm_15)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        score1_address0 = score1_addr_reg_385;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        score1_address0 = grp_needlemanWunsch_doRow_fu_174_score_out_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        score1_address0 = grp_needlemanWunsch_doRow_fu_174_score_in_address0;
    end else begin
        score1_address0 = 'bx;
    end
end

/// score1_ce0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_score_in_ce0 or grp_needlemanWunsch_doRow_fu_174_score_out_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st16_fsm_15)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        score1_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        score1_ce0 = grp_needlemanWunsch_doRow_fu_174_score_out_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        score1_ce0 = grp_needlemanWunsch_doRow_fu_174_score_in_ce0;
    end else begin
        score1_ce0 = ap_const_logic_0;
    end
end

/// score1_we0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_score_out_we0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        score1_we0 = grp_needlemanWunsch_doRow_fu_174_score_out_we0;
    end else begin
        score1_we0 = ap_const_logic_0;
    end
end

/// score2_address0 assign process. ///
always @ (score2_addr_reg_375 or grp_needlemanWunsch_doRow_fu_174_score_in_address0 or grp_needlemanWunsch_doRow_fu_174_score_out_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        score2_address0 = score2_addr_reg_375;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        score2_address0 = grp_needlemanWunsch_doRow_fu_174_score_out_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        score2_address0 = grp_needlemanWunsch_doRow_fu_174_score_in_address0;
    end else begin
        score2_address0 = 'bx;
    end
end

/// score2_ce0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_score_in_ce0 or grp_needlemanWunsch_doRow_fu_174_score_out_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        score2_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        score2_ce0 = grp_needlemanWunsch_doRow_fu_174_score_out_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        score2_ce0 = grp_needlemanWunsch_doRow_fu_174_score_in_ce0;
    end else begin
        score2_ce0 = ap_const_logic_0;
    end
end

/// score2_we0 assign process. ///
always @ (grp_needlemanWunsch_doRow_fu_174_score_out_we0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        score2_we0 = grp_needlemanWunsch_doRow_fu_174_score_out_we0;
    end else begin
        score2_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_199_p2 or ap_sig_bdd_156 or grp_needlemanWunsch_doRow_fu_174_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(tmp_fu_199_p2 == ap_const_lv1_0) & ~ap_sig_bdd_156)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_needlemanWunsch_doRow_fu_174_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_logic_0 == grp_needlemanWunsch_doRow_fu_174_ap_done)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(ap_const_logic_0 == grp_needlemanWunsch_doRow_fu_174_ap_done)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            if (~(ap_const_logic_0 == grp_needlemanWunsch_doRow_fu_174_ap_done)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = max_orig_reg_150;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_101 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_101 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_108 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_108 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_120 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_127 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_148 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_148 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ref_genome_TVALID or tmp_fu_199_p2)
begin
    ap_sig_bdd_156 = ((ref_genome_TVALID == ap_const_logic_0) & ~(tmp_fu_199_p2 == ap_const_lv1_0));
end

/// ap_sig_bdd_173 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_173 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_203 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_203 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_218 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_218 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_231 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_313 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_313 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_320 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_320 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_327 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_334 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_334 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_355 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_355 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_363 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_363 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_370 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_370 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign grp_needlemanWunsch_doRow_fu_174_ap_start = grp_needlemanWunsch_doRow_fu_174_ap_start_ap_start_reg;
assign grp_needlemanWunsch_doRow_fu_174_read_r_Dout_A = read_r_Dout_A;
assign i_1_fu_258_p2 = (ap_const_lv20_1 + i_reg_138);
assign i_2_fu_281_p2 = (ap_const_lv20_2 + i_reg_138);
assign i_3_fu_316_p2 = (ap_const_lv20_3 + i_reg_138);
assign i_4_fu_323_p2 = (ap_const_lv20_4 + i_reg_138);
assign max_orig_5_fu_367_p3 = ((or_cond4_fu_363_p2[0:0]===1'b1)? newSel3_fu_358_p3: max_orig_reg_150);
assign max_score_1_fu_240_p1 = $signed(reg_187);
assign max_score_2_fu_274_p3 = ((tmp_4_fu_269_p2[0:0]===1'b1)? max_score_3_fu_265_p1: max_score_5_max_score_reg_423);
assign max_score_3_fu_265_p1 = $signed(reg_195);
assign max_score_4_fu_351_p3 = ((tmp_6_fu_333_p2[0:0]===1'b1)? max_score_6_fu_329_p1: max_score_7_max_score_2_reg_465);
assign max_score_5_fu_300_p1 = $signed(reg_187);
assign max_score_5_max_score_fu_250_p3 = ((tmp_3_fu_244_p2[0:0]===1'b1)? max_score_1_fu_240_p1: max_score_reg_162);
assign max_score_6_fu_329_p1 = $signed(reg_195);
assign max_score_7_max_score_2_fu_309_p3 = ((tmp_5_fu_304_p2[0:0]===1'b1)? max_score_5_fu_300_p1: max_score_2_reg_439);
assign needlemanWunsch_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign newSel1_fu_288_p3 = ((tmp_4_fu_269_p2[0:0]===1'b1)? max_orig_2_reg_434: reg_191);
assign newSel3_fu_358_p3 = ((or_cond_reg_486[0:0]===1'b1)? newSel_reg_481: newSel1_reg_450);
assign newSel_fu_338_p3 = ((tmp_6_fu_333_p2[0:0]===1'b1)? orig1_q0: reg_191);
assign or_cond2_fu_295_p2 = (tmp_4_fu_269_p2 | tmp_3_reg_418);
assign or_cond4_fu_363_p2 = (or_cond_reg_486 | or_cond2_reg_455);
assign or_cond_fu_346_p2 = (tmp_6_fu_333_p2 | tmp_5_reg_460);
assign orig1_addr_gep_fu_114_p3 = ap_const_lv64_63;
assign orig1_d0 = grp_needlemanWunsch_doRow_fu_174_orig_out_d0;
assign orig2_addr_gep_fu_98_p3 = ap_const_lv64_63;
assign orig2_d0 = grp_needlemanWunsch_doRow_fu_174_orig_out_d0;
assign read_r_Addr_A = grp_needlemanWunsch_doRow_fu_174_read_r_Addr_A;
assign read_r_Clk_A = ap_clk;
assign read_r_Din_A = ap_const_lv32_0;

/// read_r_Rst_A assign process. ///
always @ (ap_rst_n)
begin
    read_r_Rst_A = ~ap_rst_n;
end
assign read_r_WEN_A = ap_const_lv4_0;
assign ref_a_fu_205_p1 = ref_genome_TDATA[1:0];
assign score1_addr_gep_fu_106_p3 = ap_const_lv64_63;
assign score1_d0 = grp_needlemanWunsch_doRow_fu_174_score_out_d0;
assign score2_addr_gep_fu_90_p3 = ap_const_lv64_63;
assign score2_d0 = grp_needlemanWunsch_doRow_fu_174_score_out_d0;
assign tmp_3_fu_244_p2 = ($signed(max_score_1_fu_240_p1) > $signed(max_score_reg_162)? 1'b1: 1'b0);
assign tmp_4_fu_269_p2 = ($signed(max_score_3_fu_265_p1) > $signed(max_score_5_max_score_reg_423)? 1'b1: 1'b0);
assign tmp_5_fu_304_p2 = ($signed(max_score_5_fu_300_p1) > $signed(max_score_2_reg_439)? 1'b1: 1'b0);
assign tmp_6_fu_333_p2 = ($signed(max_score_6_fu_329_p1) > $signed(max_score_7_max_score_2_reg_465)? 1'b1: 1'b0);
assign tmp_fu_199_p2 = (i_reg_138 < ap_const_lv20_F4241? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    score2_addr_reg_375[6:0] <= 7'b1100011;
    orig2_addr_reg_380[6:0] <= 7'b1100011;
    score1_addr_reg_385[6:0] <= 7'b1100011;
    orig1_addr_reg_390[6:0] <= 7'b1100011;
end



endmodule //needlemanWunsch

